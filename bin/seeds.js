const mongoose = require('mongoose');
const Activity = require('../models/activity-model');

mongoose.connect(process.env.MONGODB_URI, {
  useCreateIndex: true,
  useNewUrlParser: true,
  useUnifiedTopology: true,
});
const activitiesSeeds = [{
  name: 'Go for a walk',
  description: "Oxygeneting this brain wouldn't hurt!",
  minDuration: '15',
  categories: ['Outdoors'],
  timeWindowStart: 7,
  timeWindowEnd: 21,
  hasCost: false,
  isHighPriority: false,
  seasonStart: 0,
  seasonEnd: 11,
},
{
  name: 'Try out a new recipe',
  description: 'If you have no inspiration, get a random recipe in the link below',
  url: ['http://www.dammitwhatdoyouwant.co.uk'],
  minDuration: '60',
  categories: ['Indoors', 'Cooking'],
  timeWindowStart: 8,
  timeWindowEnd: 22,
  hasCost: false,
  isHighPriority: false,
  seasonStart: 0,
  seasonEnd: 11,
},
{
  name: 'Listen to a playlist',
  description: 'Checkout your spotify suggestions, or just listen to our curated paylist.',
  url: ['http://www.spotify.com'],
  minDuration: '10',
  categories: ['Relaxing'],
  timeWindowStart: 0,
  timeWindowEnd: 24,
  hasCost: false,
  isHighPriority: false,
  seasonStart: 0,
  seasonEnd: 11,
},
{
  name: 'Watch a movie',
  description: "A good way to chose it to checkout the IMDB's top rated, and watch the first movie in the list you haven't watched yet.",
  url: ['https://www.imdb.com/chart/top/'],
  minDuration: '90',
  categories: ['Indoors'],
  timeWindowStart: 0,
  timeWindowEnd: 24,
  hasCost: false,
  isHighPriority: false,
  seasonStart: 0,
  seasonEnd: 11,
},
{
  name: 'Go for a run',
  description: 'Go slow, go fast. In the streets or at the parc. With music or not. It is all up to you.',
  minDuration: '30',
  categories: ['Outdoors', 'Sports'],
  timeWindowStart: 7,
  timeWindowEnd: 20,
  hasCost: false,
  isHighPriority: false,
  seasonStart: 0,
  seasonEnd: 11,
},
{
  name: 'Call or skype your parents',
  description: 'It is so obvious we tend to forget, right?',
  minDuration: '5',
  categories: ['Relaxing'],
  timeWindowStart: 9,
  timeWindowEnd: 21,
  hasCost: false,
  isHighPriority: false,
  seasonStart: 0,
  seasonEnd: 11,
},
{
  name: 'Take a bath',
  description: 'No bathtub at home? Find one!',
  minDuration: '15',
  categories: ['Relaxing'],
  timeWindowStart: 12,
  timeWindowEnd: 22,
  hasCost: false,
  isHighPriority: false,
  seasonStart: 0,
  seasonEnd: 11,
},
{
  name: 'Buy groceries for the week',
  description: "You'll find yourselve cooking more and save money.",
  minDuration: '60',
  categories: ['Housework'],
  timeWindowStart: 9,
  timeWindowEnd: 19,
  hasCost: false,
  isHighPriority: false,
  seasonStart: 0,
  seasonEnd: 11,
},
{
  name: 'Go sit at the park',
  description: 'On a bench or on the grass, with or awithout friends, we leave the details to you.',
  minDuration: '30',
  categories: ['Relaxing', 'Outdoors'],
  timeWindowStart: 10,
  timeWindowEnd: 21,
  hasCost: false,
  isHighPriority: false,
  seasonStart: 3,
  seasonEnd: 8,
},
{
  name: 'Have a drink with a friend',
  description: 'Or several of them. Be spontenous, invite them over or meet out.',
  minDuration: '15',
  categories: ['Relaxing'],
  timeWindowStart: 16,
  timeWindowEnd: 22,
  hasCost: false,
  isHighPriority: false,
  seasonStart: 0,
  seasonEnd: 11,
},
{
  name: "Call that friend you've been missing",
  description: 'That friend probably misses you too.',
  minDuration: '5',
  categories: ['Relaxing'],
  timeWindowStart: 9,
  timeWindowEnd: 22,
  hasCost: false,
  isHighPriority: false,
  seasonStart: 0,
  seasonEnd: 11,
},
{
  name: 'Clean the bathroom',
  description: "You don't like it? Spoiler alert: no one likes it.",
  minDuration: '30',
  categories: ['Housework'],
  timeWindowStart: 9,
  timeWindowEnd: 22,
  hasCost: false,
  isHighPriority: false,
  seasonStart: 0,
  seasonEnd: 11,
},
{
  name: 'Clean the fridge',
  description: "You don't like it? Spoiler alert: no one likes it.",
  minDuration: '30',
  categories: ['Housework'],
  timeWindowStart: 8,
  timeWindowEnd: 22,
  hasCost: false,
  isHighPriority: false,
  seasonStart: 0,
  seasonEnd: 11,
},
{
  name: 'Clean the oven',
  description: "You don't like it? Spoiler alert: no one likes it.",
  minDuration: '30',
  categories: ['Housework'],
  timeWindowStart: 8,
  timeWindowEnd: 22,
  hasCost: false,
  isHighPriority: false,
  seasonStart: 0,
  seasonEnd: 11,
},
{
  name: 'Change the bedsheets',
  description: 'You can also let it cool down and BAM!, it is an iced tea. A nice tea.',
  minDuration: '30',
  categories: ['Housework'],
  timeWindowStart: 8,
  timeWindowEnd: 21,
  hasCost: false,
  isHighPriority: false,
  seasonStart: 0,
  seasonEnd: 11,
},
{
  name: 'Organise your wardrobe',
  description: 'Donate what you havenâ€™t worn for more than 2 years to charity.',
  minDuration: '60',
  categories: ['Housework'],
  timeWindowStart: 8,
  timeWindowEnd: 22,
  hasCost: false,
  isHighPriority: false,
  seasonStart: 0,
  seasonEnd: 11,
},
{
  name: 'Update your CV',
  description: 'You will be happy when your CV, up-to-date, is ready for you next job hunt!',
  minDuration: '30',
  categories: ['Relaxing', 'Indoors'],
  timeWindowStart: 0,
  timeWindowEnd: 23,
  hasCost: false,
  isHighPriority: false,
  seasonStart: 0,
  seasonEnd: 11,
},
{
  name: 'Write a diary story',
  description: '10 years ago, you remembered what had happened 5 years before. But today, do you remember what happened 15 year ago? Memories are precious. Keep a trace. How was your day? How are you feeling? Just write it down.',
  minDuration: '15',
  categories: ['Relaxing'],
  timeWindowStart: 0,
  timeWindowEnd: 24,
  hasCost: false,
  isHighPriority: false,
  seasonStart: 0,
  seasonEnd: 11,
},
{
  name: 'Write a letter to your future self',
  description: "Isn't it funny how we sort of feel",
  minDuration: '60',
  categories: ['Housework'],
  timeWindowStart: 8,
  timeWindowEnd: 22,
  hasCost: false,
  isHighPriority: false,
  seasonStart: 0,
  seasonEnd: 11,
},
{
  name: 'Take a look back at your year',
  description: 'What did you enjoy? What did you accomplish',
  minDuration: '20',
  categories: ['Offline', 'Relaxing'],
  timeWindowStart: 0,
  timeWindowEnd: 24,
  hasCost: false,
  isHighPriority: false,
  seasonStart: 0,
  seasonEnd: 11,
},
{
  name: "Ask your friend what's their favorite show and watch it",
  description: 'Preferably chose a friend with good taste if you want to avoid bad surprises!',
  minDuration: '60',
  categories: ['Relaxing'],
  timeWindowStart: 8,
  timeWindowEnd: 22,
  hasCost: false,
  isHighPriority: false,
  seasonStart: 0,
  seasonEnd: 11,
},
{
  name: 'Ask 5 friends why they like you',
  description: "Or why sometimes, they don't. But make sure you ego is ready for that.",
  minDuration: '10',
  categories: ['Indoors', 'Relaxing'],
  timeWindowStart: 8,
  timeWindowEnd: 22,
  hasCost: false,
  isHighPriority: false,
  seasonStart: 0,
  seasonEnd: 11,
},
{
  name: 'Draw something',
  description: 'New to this? Check out the link beloew to draw a shady apple.',
  minDuration: '10',
  categories: ['Indoors', 'Relaxing'],
  url: ['https://www.youtube.com/watch?v=-WR-FyUQc6I'],
  timeWindowStart: 8,
  timeWindowEnd: 22,
  hasCost: false,
  isHighPriority: false,
  seasonStart: 0,
  seasonEnd: 11,
},
{
  name: 'A little sports',
  description: "Or a lot. We've set it to 20 minutes but extend it however your body likes.",
  minDuration: '20',
  categories: ['Indoors', 'Outdoors', 'Sports'],
  timeWindowStart: 8,
  timeWindowEnd: 22,
  hasCost: false,
  isHighPriority: false,
  seasonStart: 0,
  seasonEnd: 11,
},
{
  name: 'Take care of your skin',
  description: 'Treat it with a facemask. Straight from the market or homemade with cucumbers. Like those typical TV show housewives.',
  minDuration: '20',
  categories: ['Indoors', 'Relaxing'],
  timeWindowStart: 0,
  timeWindowEnd: 24,
  hasCost: false,
  isHighPriority: false,
  seasonStart: 0,
  seasonEnd: 11,
},
{
  name: 'List your work-related achievments',
  description: 'Satisfied with the result? Ask for a raise.',
  minDuration: '20',
  categories: ['Indoors', 'Relaxing', 'Offline', 'Online'],
  timeWindowStart: 0,
  timeWindowEnd: 24,
  hasCost: false,
  isHighPriority: false,
  seasonStart: 0,
  seasonEnd: 11,
},
{
  name: 'Take the trash out',
  description: "There's no way around it.",
  minDuration: '5',
  categories: ['Indoors', 'Housework'],
  timeWindowStart: 0,
  timeWindowEnd: 24,
  hasCost: false,
  isHighPriority: false,
  seasonStart: 0,
  seasonEnd: 11,
},
{
  name: 'Pick up a book and read 20 pages',
  description: 'Children books are allowed. Dictionnaries as well.',
  minDuration: '20',
  categories: ['Indoors', 'Relaxing', 'Offline'],
  timeWindowStart: 0,
  timeWindowEnd: 24,
  hasCost: false,
  isHighPriority: false,
  seasonStart: 0,
  seasonEnd: 11,
},
{
  name: 'Water the plants',
  description: "Plants clean our oxygen. Let's be grateful and not let them dry to death.",
  minDuration: '5',
  categories: ['Indoors', 'Housework'],
  timeWindowStart: 0,
  timeWindowEnd: 24,
  hasCost: false,
  isHighPriority: false,
  seasonStart: 0,
  seasonEnd: 11,
},
{
  name: 'Clean your shoes',
  description: "You'll be happy next time you wear them and they shine bright like a diamond!",
  minDuration: '20',
  categories: ['Indoors', 'Housework'],
  timeWindowStart: 0,
  timeWindowEnd: 24,
  hasCost: false,
  isHighPriority: false,
  seasonStart: 0,
  seasonEnd: 11,
},
{
  name: 'Take a day trip to a forest',
  description: 'No forest around? A park and a couple of trees will do the job!',
  minDuration: '240',
  categories: ['Outdoors', 'Adventures'],
  timeWindowStart: 9,
  timeWindowEnd: 14,
  hasCost: false,
  isHighPriority: false,
  seasonStart: 0,
  seasonEnd: 11,
},
{
  name: 'Take a day trip to a lake',
  description: 'Lakes are beautiful. Walk, swim, listen to the birds... Enjoy mother nature.',
  minDuration: '240',
  categories: ['Outdoors', 'Adventures'],
  timeWindowStart: 9,
  timeWindowEnd: 14,
  hasCost: false,
  isHighPriority: false,
  seasonStart: 0,
  seasonEnd: 11,
},

];
Activity.create(activitiesSeeds)
  .then((activitiesfromDB) => {
    console.log(`Created ${activitiesfromDB.length} activities`);
  })
  .catch((err) => console.log(`An error occurred while creating movies from the DB: ${err}`));
