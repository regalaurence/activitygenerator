[{"/Users/anitamikas/Desktop/final-project/activity_generator/client/src/index.js":"1","/Users/anitamikas/Desktop/final-project/activity_generator/client/src/reportWebVitals.js":"2","/Users/anitamikas/Desktop/final-project/activity_generator/client/src/App.js":"3","/Users/anitamikas/Desktop/final-project/activity_generator/client/src/components/AllActivities.js":"4","/Users/anitamikas/Desktop/final-project/activity_generator/client/src/components/MyActivities.js":"5","/Users/anitamikas/Desktop/final-project/activity_generator/client/src/components/Navbar.js":"6","/Users/anitamikas/Desktop/final-project/activity_generator/client/src/components/Home.js":"7","/Users/anitamikas/Desktop/final-project/activity_generator/client/src/components/UserProfile.js":"8","/Users/anitamikas/Desktop/final-project/activity_generator/client/src/components/StartGame.js":"9","/Users/anitamikas/Desktop/final-project/activity_generator/client/src/components/Footer.js":"10","/Users/anitamikas/Desktop/final-project/activity_generator/client/src/components/homepage/Welcome.js":"11","/Users/anitamikas/Desktop/final-project/activity_generator/client/src/components/auth/Signup.js":"12","/Users/anitamikas/Desktop/final-project/activity_generator/client/src/components/todolist/MakeMeDo.js":"13","/Users/anitamikas/Desktop/final-project/activity_generator/client/src/components/auth/Login.js":"14","/Users/anitamikas/Desktop/final-project/activity_generator/client/src/components/createactivities/NewActivityForm.js":"15","/Users/anitamikas/Desktop/final-project/activity_generator/client/src/components/createactivities/EditActivity.js":"16","/Users/anitamikas/Desktop/final-project/activity_generator/client/src/components/homepage/About.js":"17","/Users/anitamikas/Desktop/final-project/activity_generator/client/src/components/createactivities/SelectMonth.js":"18","/Users/anitamikas/Desktop/final-project/activity_generator/client/src/components/todolist/CreateTodoList.js":"19","/Users/anitamikas/Desktop/final-project/activity_generator/client/src/components/createactivities/CategoriesCheckboxes.js":"20","/Users/anitamikas/Desktop/final-project/activity_generator/client/src/components/todolist/RandomActivity.js":"21","/Users/anitamikas/Desktop/final-project/activity_generator/client/src/components/todolist/ToDoListItem.js":"22","/Users/anitamikas/Desktop/final-project/activity_generator/client/src/components/Activity.js":"23","/Users/anitamikas/Desktop/final-project/activity_generator/client/src/components/FilterByCategory.js":"24","/Users/anitamikas/Desktop/final-project/activity_generator/client/src/components/todolist/ToDoListForm.js":"25"},{"size":679,"mtime":1611411177823,"results":"26","hashOfConfig":"27"},{"size":362,"mtime":1611254447000,"results":"28","hashOfConfig":"27"},{"size":6898,"mtime":1613632146607,"results":"29","hashOfConfig":"27"},{"size":3628,"mtime":1613505901179,"results":"30","hashOfConfig":"27"},{"size":3550,"mtime":1613505901181,"results":"31","hashOfConfig":"27"},{"size":5010,"mtime":1613638189385,"results":"32","hashOfConfig":"27"},{"size":2234,"mtime":1613505901180,"results":"33","hashOfConfig":"27"},{"size":4101,"mtime":1613505901182,"results":"34","hashOfConfig":"27"},{"size":3986,"mtime":1613651373397,"results":"35","hashOfConfig":"27"},{"size":694,"mtime":1613125136280,"results":"36","hashOfConfig":"27"},{"size":699,"mtime":1613577012938,"results":"37","hashOfConfig":"27"},{"size":3381,"mtime":1613505901183,"results":"38","hashOfConfig":"27"},{"size":1451,"mtime":1613505901188,"results":"39","hashOfConfig":"27"},{"size":3783,"mtime":1613576975305,"results":"40","hashOfConfig":"27"},{"size":8061,"mtime":1613505901185,"results":"41","hashOfConfig":"27"},{"size":7554,"mtime":1613505901184,"results":"42","hashOfConfig":"27"},{"size":1629,"mtime":1613505901186,"results":"43","hashOfConfig":"27"},{"size":1229,"mtime":1613223041473,"results":"44","hashOfConfig":"27"},{"size":9727,"mtime":1613505901187,"results":"45","hashOfConfig":"27"},{"size":1329,"mtime":1613505901183,"results":"46","hashOfConfig":"27"},{"size":2028,"mtime":1613505901188,"results":"47","hashOfConfig":"27"},{"size":1633,"mtime":1613505901189,"results":"48","hashOfConfig":"27"},{"size":2653,"mtime":1613505901178,"results":"49","hashOfConfig":"27"},{"size":1022,"mtime":1613505901179,"results":"50","hashOfConfig":"27"},{"size":2822,"mtime":1613505901189,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1ruanxo",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"54"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"54"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"54"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"54"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"54"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"54"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"54"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"54"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"54"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"54"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"54"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"54"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"54"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"54"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"54"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"54"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"/Users/anitamikas/Desktop/final-project/activity_generator/client/src/index.js",[],["119","120"],"/Users/anitamikas/Desktop/final-project/activity_generator/client/src/reportWebVitals.js",[],"/Users/anitamikas/Desktop/final-project/activity_generator/client/src/App.js",[],"/Users/anitamikas/Desktop/final-project/activity_generator/client/src/components/AllActivities.js",["121"],"import React, { Component } from 'react';\nimport axios from 'axios';\nimport Activity from './Activity.js'\nimport { Link, withRouter } from 'react-router-dom';\nimport FilterByCategory from './FilterByCategory'\nclass AllActivities extends Component {\n\n  state = {\n    activitiesFromDb: [],\n    search: '',\n    filterBy: '',\n    isLoading: true,\n    isError: false\n  }\n\n  componentDidMount() {\n    axios.get(\"/api/activities\")\n      .then(response => {\n        this.setState({ \n          activitiesFromDb: response.data, \n          isLoading: false \n        })\n        // console.log(\"Response from backend: \", response.data)\n      })\n    .catch((err => {\n      this.setState({\n        isError: true\n      })\n    }))\n  }\n\n  handleChange = (event) => {\n    let target = event.target;\n    let value = target.value;\n    this.setState({\n      search: value\n    });\n    console.log('state here', this.state);\n  };\n\n  handleFilterChange = (event) => {\n    this.setState({\n      filterBy: event.target.value\n    })\n  }\n\n  render() {\n    let filteredByActivities = [...this.state.activitiesFromDb]\n    if (this.state.filterBy.length !== 0) {\n      filteredByActivities = [...this.state.activitiesFromDb]\n            .filter(activity => activity.categories.includes(this.state.filterBy))\n    }\n\n    let filteredBySearchAndCatsActivities = [...filteredByActivities]\n      .filter(activity => {\n        return activity.name.toLowerCase().includes(this.state.search.toLowerCase());\n      });\n    \n    console.log(filteredBySearchAndCatsActivities)\n\n    return (\n      <section className=\"hero\">\n        <div className=\"hero-body\">\n          <div className=\"container\">\n            <div className=\"columns is-vcentered is-centered has-text-centered center\">\n              <form style={{ maxWidth: \"512px\" }} className=\"center\">\n                <div className=\"field\">\n                  <div className=\"columns is-vcentered is-centered center\">\n                    <figure className=\"image center\" style={{ maxWidth: \"412px\" }}>\n                      <img src=\"images/AllActivities.png\" />\n                    </figure>\n                  </div>\n                  <div className=\"control\">\n                    <Link to=\"/my-activities\"> <button className=\"button is-primary mb-3\">My Activities</button></Link>\n                    <Link to=\"/add-activity\"> <button className=\"button is-primary mb-3\">Create Activity</button></Link>\n                  </div>\n                  <div className=\"control\">\n                    <p className=\"control\">\n                      <input className=\"input mb-1\" type=\"text\" placeholder=\"Find Activity...\" name=\"search\" value={this.state.search} onChange={this.handleChange} />\n                      \n                    </p>\n                   \n                  </div>\n                  <FilterByCategory\n                    handleFilterChange={this.handleFilterChange}\n                  />\n                  \n                </div>\n              </form>\n            </div>\n            <div>\n            {this.state.isLoading && <progress className=\"progress is-small is-primary\" max=\"100\">15%</progress>}\n              {filteredBySearchAndCatsActivities\n                .map(activity => <Activity\n                  key={activity._id}\n                  activity={activity}\n                  currentFavorites={this.props.currentFavorites}\n                  addToFavorite={this.props.addToFavorite}\n                  removeFromFavorite={this.props.removeFromFavorite}\n                />)}\n            </div>\n          </div>\n        </div>\n      </section>\n    )\n  }\n}\n\n\n\nexport default withRouter(AllActivities);","/Users/anitamikas/Desktop/final-project/activity_generator/client/src/components/MyActivities.js",["122"],"import React, { Component } from 'react';\nimport {Link} from 'react-router-dom';\n\nclass MyActivities extends Component {\n\n  state = {\n    activityDetailsShown: false,\n    clickedActivity: null,\n  }\n\n  removeFromFavorites = (event) => {\n    this.props.removeFromFavorite(event.target.value)\n    this.setState({\n      isFavorite: false\n    })\n  }\n\n  showActivityDetails = (event) => {\n    this.setState({\n      activityDetailsShown: true,\n      clickedActivity: event.target.value,\n    })\n  }\n\n  printDetails = (argActivity) => {\n    let forDetail = [...this.props.currentFavorites]\n    let foundActivity = forDetail.find(el => el._id === argActivity)\n    return (<div className=\"column is-vcentered is-centered\"><p>\n      {foundActivity.description\n        ? <span><strong>Description:</strong><br></br>{foundActivity.description}</span>\n        : <span><strong>Description:</strong><br></br>Edit this activity to add the description</span>}<br></br>\n        {foundActivity.url\n        ? <span><strong>Url: </strong><a href={foundActivity.url}>{foundActivity.url}</a></span>\n        : <span><strong>Url: </strong><br></br>Edit this activity to add the url</span>}<br></br>\n      <strong>Duration:</strong> {foundActivity.minDuration}<br></br>\n      {foundActivity.hasCost\n        ? <span><strong>Cost:</strong> It's not for free</span>\n        : <span><strong>Cost:</strong> It's for free!</span>}<br></br>\n      {foundActivity.isHighPriority\n        ? <span><strong>Priority:</strong> High</span>\n        : <span><strong>Priority:</strong> Low</span>} </p></div>)\n  }\n\n\n\n  render() {\n\n\n    \n    return (\n\n      // this.state.activityDetailsShown ?\n      // <div><p>Checking here</p></div> :\n\n      <section className=\"hero\">\n        <div className=\"hero-body\">\n          <div className=\"container\">\n            <div className=\"columns is-vcentered is-centered center\">\n              <figure className=\"image is-vcentered is-centered has-text-centered mb-6\">\n                <img style={{ maxWidth: \"412px\" }} src=\"images/Myactivities.png\" />\n              </figure>\n            </div>\n            <div className=\"columns is-multiline is-mobile center\">\n            <div className=\"content\"><h4 className=\"has-text-centered\">Your Favourites Activities:</h4></div>\n              {this.props.currentFavorites &&\n                this.props.currentFavorites.map(activity =>\n                  <div className=\"column is-full has-text-centered\">\n                    <h1 className=\"activity-name\"><strong>{activity.name}</strong></h1>\n                    <button onClick={this.showActivityDetails} key={activity._id} value={activity._id} className=\"button is-small is-success mr-2\">See details</button>\n                    <Link to=\"/edit-activity\"><button className=\"button is-small is-success is-outlined mr-2\" value={activity._id} onClick={(event) => {this.props.editActivity(event.target.value)}}>Edit activity</button></Link>\n                    <button className=\"button is-light is-small\" value={activity._id} onClick={this.removeFromFavorites}>Remove</button>\n                    {/* {activity.isHighPriority ? <span> High priority</span> : <span> Low priority</span>}  */}\n                    {activity._id === this.state.clickedActivity ? <div className=\"columns is-multiline is-mobile\">\n                      {this.printDetails(this.state.clickedActivity)}\n                    </div> : <p></p>}\n                  </div>\n                )}\n            </div>\n          </div>\n        </div>\n      </section>\n    )\n  }\n}\n\nexport default MyActivities;","/Users/anitamikas/Desktop/final-project/activity_generator/client/src/components/Navbar.js",["123","124","125","126","127","128","129","130","131","132","133","134","135","136","137","138"],"import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { withRouter, Redirect } from 'react-router-dom'\n\n\nclass Navbar extends Component {\n  \n    state = {\n      active: \"navbar-menu\"\n    }\n  \n\n  toggleClass = () => {\n    console.log(\"happens\")\n    console.log(this.state.active)\n    if (this.state.active == \"navbar-menu\") {\n      return this.setState({\n        active: \"navbar-menu is-active\"\n      })\n    }\n    else {\n      return this.setState({\n        active: \"navbar-menu\"\n      })\n    }\n  }\n\n\n  handleLogOut = () => {\n    this.props.logoutUser()\n  }\n\n\n  checkRedirect = (event) =>{\n    \n    let target = event.target;\n    let name = target.name;\n    console.log(name);\n    console.log(\"happens two\")\n    console.log(this.state.active)\n    if (this.state.active == \"navbar-menu is-active\") {\n      return this.setState({\n        active: \"navbar-menu\"\n      }, this.props.history.push(`/${name}`))\n    }\n    else {\n      return this.setState({\n        active: \"navbar-menu\"\n      })\n    }\n  }\n\n\n\n  render() {\n\n    console.log(\"History: \", this.props.history.location.pathname)\n    console.log(\"User: \", this.props.currentUser)\n\n\n    return (\n      <nav className=\"navbar\" role=\"navigation\" aria-label=\"main navigation\">\n        <div className=\"navbar-brand\">\n          <a className=\"navbar-item\">\n            <Link to=\"/home\" className=\"has-text-grey-dark\">\n              <img src=\"images/MakeMeDo_textOnly_black.png\" width=\"112\" height=\"28\" />\n            </Link>\n          </a>\n\n          <a role=\"button\" onClick={this.toggleClass} className=\"navbar-burger\" aria-label=\"menu\" aria-expanded=\"false\" data-target=\"navbarBasicExample\">\n\n\n            <span aria-hidden=\"true\"></span>\n            <span aria-hidden=\"true\"></span>\n            <span aria-hidden=\"true\"></span>\n          </a>\n\n        </div>\n\n\n        {/* <input type=\"checkbox\" id=\"nav-toggle-state\" /> */}\n\n\n        <div id=\"navbarBasicExample\" className={this.state.active}>\n          <div className=\"navbar-start\">\n            <a className=\"navbar-item\" onClick={this.checkRedirect} name=\"home\">\n              <Link to=\"/home\" className=\"has-text-grey-dark\">Home</Link>\n            </a>\n\n            <div className=\"navbar-start\">\n              <a className=\"navbar-item\" onClick={this.checkRedirect} name=\"make-me-do\">\n                <Link to=\"/make-me-do\" className=\"has-text-grey-dark\">Do Something</Link>\n              </a>\n            </div>\n\n      \n\n<nav class=\"navbar\" role=\"navigation\" aria-label=\"dropdown navigation\">\n            <div className=\"navbar-item has-dropdown is-hoverable\" >\n              <a className=\"navbar-link\">\n                Activities\n            </a>\n              <div className=\"navbar-dropdown is-right\">\n                <a className=\"navbar-item\" onClick={this.checkRedirect} name=\"activities\">\n                  <Link to=\"/activities\" className=\"has-text-grey-dark\">Browse Activities</Link>\n                </a>\n                <a className=\"navbar-item\" onClick={this.checkRedirect} name=\"my-activities\">\n                  <Link to=\"/my-activities\" className=\"has-text-grey-dark\">My Activities</Link>\n                </a>\n                <a className=\"navbar-item\" onClick={this.checkRedirect} name=\"add-activity\">\n                  <Link to=\"/add-activity\" className=\"has-text-grey-dark\">Create Activities</Link>\n                </a>\n              </div>\n            </div>\n</nav> \n\n          </div>\n\n          <div className=\"navbar-end\">\n          <div className=\"navbar-item\">\n              {/* ANITA CHENGE HERE FOR USER PROFILE */}\n              {/* {this.props.currentUser ? <a className=\"navbar-item\" onClick={this.checkRedirect} name=\"user-profile\">Your profile</a> : null} */}\n              {this.props.currentUser ? <a className=\"button is-primary\" ><Link to=\"/user-profile\" className=\"button-is-light\" onClick={this.checkRedirect} name=\"user-profile\">Your profile</Link></a> : null}\n{/* OLD ONE\n              {this.props.currentUser ? <div to=\"/make-me-do\" className=\"has-text-grey-dark\"><Link to=\"/user-profile\" className=\"button-is-light\" onClick={this.toggleClass}>Your profile</Link></div> : null} */}\n\n            </div>\n            <div className=\"navbar-item\">\n              <div className=\"buttons\">\n                {!this.props.currentUser ?\n                  <a className=\"button is-primary\" onClick={this.checkRedirect} name=\"signup\">\n                    <Link to=\"/signup\" className=\"has-text-grey-dark\" onClick={this.checkRedirect} name=\"signup\">Sign up</Link>\n                  </a> : null}\n\n                {this.props.currentUser ? <a className=\"button is-light\" onClick={this.handleLogOut}>\n                  Log out</a> : <a className=\"button is-light\">\n                    <Link to=\"/login\" className=\"button-is-light\" onClick={this.checkRedirect} name=\"login\">Log in</Link>\n                  </a>}\n              </div>\n            </div>\n          </div>\n        </div>\n      </nav>\n\n    )\n  }\n}\n\nexport default withRouter(Navbar);\n\n","/Users/anitamikas/Desktop/final-project/activity_generator/client/src/components/Home.js",["139","140","141","142","143","144"],"import React, { Component } from 'react';\nimport { Link, Route } from 'react-router-dom';\nimport AddActivity from './createactivities/NewActivityForm';\nimport AllActivities from './AllActivities';\nimport MyActivities from './MyActivities';\nimport MakeMeDo from './todolist/MakeMeDo';\n\nclass Home extends Component {\n\n    render() {\n\n        return (\n            <section className=\"hero is-fullheight\">\n                <div className=\"hero-body\">\n                    <div className=\"container\">\n                        <div className=\"columns is-vcentered is-centered center\">\n                            <figure className=\"image is-vcentered is-centered has-text-centered mb-6\">\n                                {/* <img style={{ maxWidth: \"512px\" }} src=\"images/CloudFinalDarkText.png\" /> */}\n                                <Link to=\"/make-me-do\"> <img style={{ maxWidth: \"512px\" }} src=\"images/CloudFinalDarkText.png\" /></Link>\n                            </figure>\n                        </div>\n                        <div className=\"is-vcentered is-centered\">\n                            <div className=\"columns is-vcentered is-centered has-text-centered\">\n\n                                <Link to=\"/make-me-do\" className=\"button is-light mt-2\">Make me DO something</Link><br></br>\n                            </div>\n                            <div className=\"columns is-vcentered is-centered has-text-centered\">\n                                <Link to=\"/activities\" className=\"button is-light mt-2\">Browse activities</Link><br></br>\n                            </div>\n                            <div className=\"columns is-vcentered is-centered has-text-centered\">\n                                <Link to=\"/add-activity\" className=\"button is-light mt-2\">Create an Activity</Link><br></br>\n                            </div>\n                            <div className=\"columns is-vcentered is-centered has-text-centered\">\n                                <Link to=\"/my-activities\" className=\"button is-light mt-2\">My activities</Link><br></br>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n\n            </section>\n        );\n    }\n}\nexport default Home;","/Users/anitamikas/Desktop/final-project/activity_generator/client/src/components/UserProfile.js",["145","146"],"import React, { Component } from 'react';\nimport axios from 'axios';\n\nclass UserProfile extends Component {\n  //newChosenPreferences = [];\n  state = {\n    username: \"\",\n    // password: \"\",\n    preferences: [],\n  }\n\n  componentDidMount = () => {\n    let user = this.props.user\n    console.log(user.username)\n    this.setState({\n      username: user.username,\n      preferences: user.preferences,\n\n    })\n  }\n\n  updatingUserPreferences = (newPreferences) => {\n    //const newPreferences = this.newChosenPreferences;\n    // const newPreferences = [...this.state.preferences, this.newChosenPreferences];\n    axios.put(`/api/user/${this.props.user._id}`, { preferences: newPreferences })\n      .then(() => {\n        this.setState({\n          preferences: newPreferences\n        });\n        let user = this.props.user\n        user.preferences = this.newChosenPreferences\n        this.props.updateUser(user)\n        //this.props.history.push('/home');\n      })\n      .catch(error => console.log(error))\n  }\n\n\n  pushToCategories = (event) => {\n    let newChosenPreferences = [...this.state.preferences]\n    let chosenActivity = event.currentTarget.value\n    if (!newChosenPreferences.includes(chosenActivity)) {\n      newChosenPreferences.push(chosenActivity)\n      // console.log(this.newChosenPreferences)\n    }\n    else {\n     let filteredPreferences = newChosenPreferences.filter(activity => activity !== chosenActivity)\n     newChosenPreferences = filteredPreferences;\n    }\n\n    if (newChosenPreferences.length >= 1) {\n      this.updatingUserPreferences(newChosenPreferences)\n    }\n  }\n\n\n\n  creatingButtonsFunction = () => {\n    let possiblePreferences = [\"Sports\", \"Relaxing\", \"Indoors\", \"Housework\", \"Socializing\", \"Adventures\", \"Outdoors\", \"Online\",];\n    return possiblePreferences.map(pref => {\n      return (\n        <div className=\"column is-one-third-mobile is-one-quarter-tablet is-one-quarter-desktop is-one-quarter-widescreen is-one-quarter-fullhd has-text-centered\">\n        <button id=\"categories\" className=\"has-text-centered button-checkboxes\" key={pref} type=\"submit\" onClick={this.pushToCategories} value={pref}>\n        <figure className=\"image is-vcentered is-centered\">\n            <img id=\"categories\" className=\"image\" key={pref} name={pref} style={{ maxWidth: \"180px\" }} src={\"images/\" + pref + \".png\"} />\n          </figure>\n          </button><br />{pref}\n        </div>      \n        )\n    }\n    )\n  }\n\n  render() {\n    return (\n      <section className=\"hero is-fullheight\">\n        <div className=\"hero-body\">\n          <div className=\"container\">\n            <div className=\"columns is-vcentered is-centered center\">\n              <div className=\"is-vcentered is-centered\">\n                <div className=\"content has-text-centered\">\n                  <h2 className=\"is-small\">Hello {this.state.username}!</h2></div>\n                <div className=\"content has-text-centered\">\n                  <h5 className=\"is-small\">Your preferences are: </h5> {this.state.preferences.map(pref => {\n                    return <p> {pref} </p>\n                  })}\n                  <div className=\"content has-text-centered mt-4\">\n                  <h5 className=\"is-small\">To change your preferences select the images below</h5></div>\n                </div>\n                <div className=\"columns is-multiline is-mobile\">\n                  {this.creatingButtonsFunction()}\n                </div>\n                {/* <div className=\"column has-text-centered\">\n        <button className=\"button is-warning\" key=\"submitNewPreferences\" type=\"submit\" onClick={this.updatingUserPreferences}>Save changes</button>\n      </div> */}\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    )\n  }\n}\n\nexport default UserProfile;\n\n\n\n{/* <div className=\"column is-multiline has-text-centered is-one-quarter-mobile is-one-quarter-tablet is-one-quarter-desktop is-one-quarter-widescreen is-one-quarter-fullhd\">\n          <button className=\"button is-primary\" key={pref} type=\"submit\" onClick={this.pushToCategories} value={pref}>{pref}</button>\n        </div> */}","/Users/anitamikas/Desktop/final-project/activity_generator/client/src/components/StartGame.js",["147"],"/Users/anitamikas/Desktop/final-project/activity_generator/client/src/components/Footer.js",[],"/Users/anitamikas/Desktop/final-project/activity_generator/client/src/components/homepage/Welcome.js",["148"],"import React from 'react'\nimport About from './About'\n\nclass Welcome extends React.Component {\n\n  render() {\n    return (\n      <section className=\"hero is-fullheight\">\n      <div className=\"hero-body\">\n        <div className=\"container\">\n          <div className=\"columns is-vcentered is-centered center\">\n\n\n          \n            \n              <figure className=\"image mb-4\">\n                <img style={{ maxWidth: \"312px\" }} src=\"images/BlueCloudDarkSignup.png\" />\n              </figure>\n</div>\n            <div className=\"columns is-vcentered is-centered center\">\n            \n      <About/>\n      </div>\n          </div>\n      </div>\n      \n      </section>\n    )\n}\n}\n\nexport default Welcome","/Users/anitamikas/Desktop/final-project/activity_generator/client/src/components/auth/Signup.js",["149","150","151","152"],"import React, { Component } from 'react';\nimport axios from 'axios';\n// import 'bulma/css/bulma.css'\n// import 'react-bulma-components/dist/react-bulma-components.min.css';\nimport { Link, Route, withRouter } from 'react-router-dom';\nimport Login from './Login';\n\n\n\nclass Signup extends Component {\n\n  state = { username: \"\", password: \"\" };\n\n  handleFormSubmit = (event) => {\n    event.preventDefault();\n\n    const username = this.state.username;\n    const password = this.state.password;\n\n    axios.post(\"/api/signup\", { username, password })\n      .then(() => {\n        this.setState({ username: \"\", password: \"\" });\n        this.props.history.push('/login');\n      })\n     \n  }\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  }\n\n  render() {\n    return (\n      <section className=\"hero is-fullheight\">\n        <div className=\"hero-body\">\n          <div className=\"container\">\n            <div className=\"columns is-vcentered is-centered center\">\n\n              <figure className=\"image\">\n                <img style={{ maxWidth: \"512px\" }} src=\"images/FinalLightPeach.png\" />\n              </figure>\n            </div>\n            <div className=\"columns is-vcentered is-centered center\">\n              <form style={{ maxWidth: \"512px\" }} onSubmit={this.handleFormSubmit}>\n              <h2 className=\"title is-4 mt-1\">Sign up</h2>\n                <div className=\"field\">\n                  <label className=\"label\">Username</label>\n                  <div className=\"control\">\n                    <input className=\"input\" type=\"text\" placeholder=\"e.g Anna Smith\" name=\"username\" value={this.state.username} onChange={e => this.handleChange(e)} />\n                  </div>\n                </div>\n\n                <div className=\"field\">\n                  <label className=\"label\">Password</label>\n                  <div className=\"control\">\n                  <p className=\"control\">\n                    {/* <p className=\"control has-icons-left\"> */}\n                      <input className=\"input\" type=\"password\" placeholder=\"Password\" name=\"password\" value={this.state.password} onChange={e => this.handleChange(e)} />\n                      {/* <span className=\"icon is-small is-left\">\n                        <i className=\"fas fa-lock\"></i>\n                      </span> */}\n                    </p>\n                  </div>\n                </div>\n                <div className=\"control\">\n                  <button type=\"submit\" className=\"button is-primary mb-3\" value=\"Submit\">Submit</button>\n                </div>\n                <div>Already have an account?\n                  <Link to=\"/login\" updateCurrentUser={this.updateCurrentUser}> Log in</Link>\n                \n                  {/* <a href='/login'> Log in here</a> */}\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n\n\n      </section>\n    )\n  }\n}\n\nexport default withRouter(Signup);\n\n\n{/* <form onSubmit={this.handleFormSubmit}>\n          <label>Username:</label>\n          <input type=\"text\" name=\"username\" value={this.state.username} onChange={e => this.handleChange(e)} />\n          <label>Password:</label>\n          <input type=\"password\" name=\"password\" value={this.state.password} onChange={e => this.handleChange(e)} />\n          <input type=\"submit\" value=\"Submit\" />\n        </form> */}\n","/Users/anitamikas/Desktop/final-project/activity_generator/client/src/components/todolist/MakeMeDo.js",["153","154"],"import React, { Component } from 'react';\n//import axios from 'axios';\nimport CreateToDoList from './CreateTodoList';\nimport ToDoListForm from './ToDoListForm';\nimport {Redirect, Route, withRouter} from 'react-router-dom';\n\nclass MakeMeDo extends Component {\n\n  state = {\n    time: null,\n    possibleCategories: [],\n    // userActivitiesFromDb: this.props.user.bookmarkedActivities,\n    // allActivitiesFromDb: []\n  }\n\n  handleFormSubmit = (userInputTime, userInputCategories) => {\n    this.props.onChildStateUpdate(userInputTime, userInputCategories)\n    this.setState({\n      time: userInputTime,\n      possibleCategories: userInputCategories\n    })\n  }\n\n  render() {\n\n    if (this.state.time === null || this.state.possibleCategories.length === 0) {\n      return <ToDoListForm onFormSubmit={this.handleFormSubmit}></ToDoListForm>\n    }\n\n    return (\n      <Redirect to=\"/your-todo-list\"></Redirect>\n      // <section className=\"hero\">\n      //   <div className=\"hero-body\">\n      //     <div className=\"container\">\n      //       <div className=\"columns is-vcentered is-centered\">\n      //         <form style={{ maxWidth: \"612px\" }}>\n      //           <CreateToDoList user={this.props.user} availableTime={this.state.time} possibleCategories={this.state.possibleCategories}></CreateToDoList>\n      //         </form>\n      //       </div>\n      //     </div>\n      //   </div>\n      // </section>\n    )\n  }\n}\n\nexport default withRouter(MakeMeDo);","/Users/anitamikas/Desktop/final-project/activity_generator/client/src/components/auth/Login.js",["155","156"],"import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Link, withRouter } from 'react-router-dom';\n\nclass Login extends Component {\n\n  state = { \n    username: \"\", \n    password: \"\" ,\n    isError: false\n  };\n\n  handleFormSubmit = (event) => {\n    event.preventDefault();\n\n    const username = this.state.username;\n    const password = this.state.password;\n\n    axios.post(\"/api/login\", { username, password })\n      .then((resp) => {\n        this.setState({ username: \"\", password: \"\"});\n        this.props.updateCurrentUser(resp.data)\n        this.props.history.push('/home');\n      })\n      .catch((err) => {\n        this.setState({\n          isError: true\n        })\n      })\n  }\n\n  // Geolocation of user - checking if its available\n  // componentDidMount() {\n  //   if (\"geolocation\" in navigator) {\n  //     console.log(\"Available\");\n  //   } else {\n  //     console.log(\"Not Available\");\n  //   }\n  // }\n\n  // getting the location\n\n  // componentDidMount() {\n  //   navigator.geolocation.getCurrentPosition(function(position) {\n  //     console.log(\"Latitude is :\", position.coords.latitude);\n  //     console.log(\"Longitude is :\", position.coords.longitude);\n  //   });\n  // }\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  }\n\n  render() {\n    return (\n      <section className=\"hero is-fullheight\">\n        <div className=\"hero-body\">\n          <div className=\"container\">\n            <div className=\"columns is-vcentered is-centered center\">\n            \n              <figure className=\"image\">\n                <img style={{ maxWidth: \"512px\" }} src=\"images/CloudFinalDarktext.png\" />\n              </figure>\n            </div>\n            <div className=\"columns is-vcentered is-centered center\">\n              <form style={{ maxWidth: \"512px\" }} onSubmit={this.handleFormSubmit}>\n              <h2 className=\"title is-4\">Log in</h2>\n                <div className=\"field\">\n                  <label className=\"label\">Username</label>\n                  <div className=\"control\">\n                    <input className=\"input\" type=\"text\" placeholder=\"e.g Anna Smith\" name=\"username\" value={this.state.username} onChange={e => this.handleChange(e)} />\n                  </div>\n                </div>\n\n                <div className=\"field\">\n                  <label className=\"label\">Password</label>\n                  <div className=\"control\">\n                    <p className=\"control\">\n                    {/* <p className=\"control has-icons-left\"> */}\n                      <input className=\"input\" type=\"password\" placeholder=\"Password\" name=\"password\" value={this.state.password} onChange={e => this.handleChange(e)} />\n                      {/* <span className=\"icon is-small is-left\">\n                        <i className=\"fas fa-lock\"></i>\n                      </span> */}\n                    </p>\n                  </div>\n                </div>\n                <div className=\"control\">\n                  <button type=\"submit\" className=\"button is-primary mb-3\">Submit</button>\n                </div>\n                <div><p>First time here?\n{/* <Route path=\"/login\" component={Login}></Route> */}\n                  <Link to=\"/signup\"> Sign up</Link> </p>\n                </div>\n              </form>\n\n            </div>\n          </div>\n        </div>\n      </section>\n    )\n  }\n}\n\n{/* <form onSubmit={this.handleFormSubmit}>\n<label>Username:</label>\n<input type=\"text\" name=\"username\" value={this.state.username} onChange={e => this.handleChange(e)} />\n<label>Password:</label>\n<input type=\"password\" name=\"password\" value={this.state.password} onChange={e => this.handleChange(e)} />\n<input type=\"submit\" value=\"Submit\" />\n</form> */}\n\n\n\nexport default withRouter(Login);\n","/Users/anitamikas/Desktop/final-project/activity_generator/client/src/components/createactivities/NewActivityForm.js",["157"],"import React, { Component } from 'react';\nimport axios from 'axios';\nimport SelectMonth from './SelectMonth'\nimport CategoriesCheckboxes from './CategoriesCheckboxes';\nimport { withRouter } from 'react-router-dom';\n\nconst initialState = {\n  name: \"\",\n  description: \"\",\n  url: [],\n  minDuration: 20,\n  categories: [],\n  timeWindowStart: 7,\n  timeWindowEnd: 22,\n  cost: false,\n  isHighPriority: false,\n  seasonStart: 1,\n  seasonEnd: 12\n}\n\nclass AddActivity extends Component {\n\n  state = { ...initialState, creator: this.props.user._id }\n\n  submitData = () => {\n    let { name, description, url, minDuration, creator, categories, timeWindowStart, timeWindowEnd, cost, isHighPriority, seasonStart, seasonEnd } = this.state;\n\n    return axios.post(\"/api/activities\", { name, description, url, minDuration, creator, categories, timeWindowStart, timeWindowEnd, cost, isHighPriority, seasonStart, seasonEnd })\n      .then((response) => {\n        this.props.addToFavorite(response.data, this.state.isHighPriority)\n        axios.put(`/api/user/${this.props.user._id}`,\n          {\n            $push: { \"bookmarkedActivities\": response.data }\n          })\n      })\n      .then(() => {\n        this.setState(initialState);\n      })\n      .catch(error => console.log(error))\n  }\n\n  handleAddOne = () => {\n    if (this.state.name.length === 0 || this.state.categories.length === 0) {\n      return alert('You need to select a category')\n    }\n    else {\n      this.submitData().then(() => {\n        this.props.history.push('/activities');\n      })\n    }\n  }\n\n  handleAddMore = () => {\n    if (this.state.name.length === 0 || this.state.categories.length === 0) {\n      return alert('You need to select a category')\n    }\n    else {\n      this.submitData()\n    }\n  }\n\n  handleChange = (event) => {\n    let { name, value, id, className } = event.target;\n\n    if (id === \"categories\") {\n      if (!this.state.categories.includes(name)) {\n        this.setState({\n          categories: [...this.state.categories, name]\n        })\n      }\n      else {\n        let filteredDeletion = this.state.categories.filter(c => c !== name)\n        this.setState({\n          categories: filteredDeletion\n        })\n      }\n    }\n    else if (name === 'cost') {\n      this.setState({\n        cost: !this.state.cost\n      })\n    }\n    else if (name === 'isHighPriority') {\n      this.setState({\n        isHighPriority: !this.state.isHighPriority\n      })\n    }\n    else if (id === 'seasonStart') {\n      this.setState({\n        seasonStart: value\n      })\n    }\n    else if (id === 'seasonEnd') {\n      console.log(id)\n      this.setState({\n        seasonEnd: value\n      })\n    }\n    else {\n      this.setState({\n        [name]: value\n      })\n    }\n  }\n\n\n  render() {\n\n    return (\n      <section className=\"hero\">\n        <div className=\"hero-body\">\n          <div className=\"container\">\n            <div className=\"columns is-vcentered is-centered\">\n              <div style={{ maxWidth: \"612px\" }} id=\"addActivityForm\">\n                <h2 className=\"title is-3\">Create a new activity</h2>\n                <div className=\"field\">\n                  <label className=\"label\">Name</label>\n                  <div className=\"control\">\n                    <input className=\"input\"\n                      type=\"text\"\n                      placeholder=\"e.g Listen to some podcast\"\n                      name=\"name\"\n                      value={this.state.name}\n                      onChange={this.handleChange}\n                      required\n                    />\n                  </div>\n                </div>\n                <div className=\"field\">\n                  <label className=\"label\">Description</label>\n                  <div className=\"control\">\n                    <input className=\"input\"\n                      type=\"text\"\n                      placeholder=\"e.g 'Armchair Expert' ep. 63\"\n                      name=\"description\"\n                      value={this.state.description}\n                      onChange={this.handleChange}\n                    />\n                  </div>\n                </div>\n\n                <div className=\"field\">\n                  <label className=\"label\">Any useful link?</label>\n                  <div className=\"control\">\n                    <input className=\"input\"\n                      type=\"text\"\n                      placeholder=\"e.g https://armchairexpertpod.com\"\n                      name=\"url\" value={this.state.url}\n                      onChange={this.handleChange}\n                    />\n                  </div>\n                </div>\n\n                <div className=\"field\">\n                  <label className=\"label\">Duration in minutes:</label>\n                  <div className=\"control\">\n                    <input className=\"input\"\n                      type=\"number\"\n                      name=\"minDuration\"\n                      value={this.state.minDuration}\n                      onChange={this.handleChange}\n                      required\n                    />\n                  </div>\n                </div>\n\n                <CategoriesCheckboxes\n                  label=\"Categories\"\n                  value={this.state.categories}\n                  onChange={this.handleChange}\n                />\n\n                <div className=\"field\">\n                  <label className=\"label\">Possible roughly from:</label>\n                  <div className=\"control\" style={{ maxWidth: \"100px\" }}>\n                    <input className=\"input\"\n                      min=\"0\"\n                      max=\"24\"\n                      type=\"number\"\n                      name=\"timeWindowStart\"\n                      value={this.state.timeWindowStart}\n                      onChange={this.handleChange} />\n                  </div>\n                </div>\n\n                <div className=\"field\">\n                  <label className=\"label\">Possible roughly until:</label>\n                  <div className=\"control\" style={{ maxWidth: \"100px\" }}>\n                    <input className=\"input\"\n                      min=\"0\"\n                      max=\"24\"\n                      type=\"number\"\n                      name=\"timeWindowEnd\"\n                      value={this.state.timeWindowEnd}\n                      onChange={this.handleChange}\n                    />\n                  </div>\n                </div>\n\n                <div className=\"field\">\n                  <div className=\"control\">\n                    <label className=\"checkbox\">\n                      <input type=\"checkbox\" name=\"cost\" checked={this.state.cost} onChange={this.handleChange} />\n                      {` Is the activity for free?`}</label>\n                  </div>\n                </div>\n\n                <div className=\"field\">\n                  <div className=\"control\">\n                    <label className=\"checkbox\">\n                      <input type=\"checkbox\" name=\"isHighPriority\" checked={this.state.isHighPriority} onChange={this.handleChange} />\n                      {` Is it a high priority?`}</label>\n                  </div>\n                </div>\n\n\n                <div className=\"field\">\n                  <label className=\"label\">I'd rather do this\n\n                  <SelectMonth label={\"between\"} agenda={\"seasonStart\"} onSelect={this.handleChange} />\n                    <SelectMonth label={\"and\"} agenda={\"seasonEnd\"} value=\"11\" onSelect={this.handleChange} />\n                  </label>\n                  <div className=\"control\">\n                    <div classNAme=\"select\">\n                      <div className=\"control\">\n                        <button onClick={this.handleAddOne} className=\"button is-primary mb-3 mr-3\">Add this one only</button>\n                        <button onClick={this.handleAddMore} className=\"button is-primary mb-3\">Add another after that</button>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    )\n  }\n}\n\nexport default withRouter(AddActivity);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","/Users/anitamikas/Desktop/final-project/activity_generator/client/src/components/createactivities/EditActivity.js",[],"/Users/anitamikas/Desktop/final-project/activity_generator/client/src/components/homepage/About.js",["158","159"],"import React from 'react'\nimport Login from '../auth/Login'\nimport Signup from '../auth/Signup'\nimport {Link} from 'react-router-dom';\n\nclass About extends React.Component {\n\n  render() {\n    return (\n    \n          <div className=\"column \" style={{ maxWidth: \"512px\" }}>\n            <div className=\"title is-3\">\n              <h1>Welcome to <strong>Make Me Do!</strong></h1>\n            </div>\n            <div>\n              <p>Ever had some free time on your hands but no idea what to do with it, hence did nothing at all and ended up regretting it?</p>\n              <p>Those days are over! <br />\n                <strong>Make Me Do!</strong> comes to the rescue, by generating tailor-made to-do-lists according to how much free time you have ahead.</p>\n              <p>Yup, tailor made. JUST-FOR-YOU. <br></br>\n              \n                Browsing our awesome activities database, matching it with your preferences,\n                letting you add, edit and bookmark activities,\n                crosschecking how much of a priority it is for you to do this or that\n                and much more.<br></br>\n              \n              We promise you, \"I dont' know what to do\" won't be part of your vocabulary anymore.</p>\n              <p>Because, honey... <strong>Make Me Do !</strong> will make you do.</p>\n            </div>\n            <div>\n              <Link to=\"/signup\"><button className=\"button is-primary mr-3 mt-4\">Sign me up!</button></Link>\n              <Link to=\"/login\"><button className=\"button mt-4\">Log in</button></Link>\n            </div>\n          </div>\n        \n    )\n  }\n}\n\nexport default About","/Users/anitamikas/Desktop/final-project/activity_generator/client/src/components/createactivities/SelectMonth.js",["160"],"import React from 'react';\n\nconst SelectMonth = (props) => {\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\" for=\"seasons\">{props.label}</label>\n      <div className=\"control\" style={{ maxWidth: \"160px\" }}>\n      <div className=\"select\">\n      <select id={props.agenda} name=\"months\" form=\"addActivityForm\" onChange={props.onSelect} >\n        <option value=\"0\">January</option>\n        <option value=\"1\">February</option>\n        <option value=\"2\">March</option>\n        <option value=\"3\">April</option>\n        <option value=\"4\">May</option>\n        <option value=\"5\">June</option>\n        <option value=\"6\">July</option>\n        <option value=\"7\">August</option>\n        <option value=\"8\">September</option>\n        <option value=\"9\">October</option>\n        <option value=\"10\">November</option>\n        <option value=\"11\">December</option>\n      </select>\n      </div>\n      </div>\n    </div>\n  )\n}\n\nexport default SelectMonth;\n\n\n{/* <div className=\"field\">\n<label className=\"label\">Possible roughly until:</label>\n<div className=\"control\" style={{ maxWidth: \"100px\" }}>\n  <input className=\"input\" type=\"number\" name=\"endTime\" value={this.state.endTime} onChange={this.handleChange} />\n</div>\n</div> */}","/Users/anitamikas/Desktop/final-project/activity_generator/client/src/components/todolist/CreateTodoList.js",["161","162","163","164"],"import React, { Component } from 'react';\nimport axios from 'axios';\nimport ToDoListInput from './ToDoListForm';\nimport ToDoListItem from './ToDoListItem';\nimport {withRouter} from 'react-router-dom'\n\nclass CreateToDoList extends Component {\n  // CreateToDoList receives the available time, possibleCategories and user as props\n  // Calls for useractivities & allactivites from backend and sets as state\n\n  state = {\n    userActivitiesFromDb: [],\n    allActivitiesFromDb: []\n  }\n\n  // Call to backend to get allactivities\n\n  componentDidMount = () => {\n    console.log(\"mounting\")\n    console.log(this.props.user)\n    axios.get('/api/activities')\n      .then(response => {\n        console.log(\"Repsonse from backend: \", response.data)\n        this.setState({\n          allActivitiesFromDb: response.data,\n          userActivitiesFromDb: this.props.user.userDoc.bookmarkedActivities\n        })\n      })\n  }\n\n  removeFromFavorites = (todoId) => {\n    this.props.removeFromFavorite(todoId)\n    this.setState({\n      userActivitiesFromDb: this.props.user.userDoc.bookmarkedActivities\n    })\n  }\n\n  handleTodoCheck = (todoId, isTodoChecked) => {\n    this.setState({\n      [todoId]: isTodoChecked\n    })\n    this.removeFromFavorites(todoId)\n  }\n\n  // Functions that generate todo list as Class Methods for CreateToDoList\n\n  generateToDoList = (time, categories) => {\n\n    console.log(\"State: \", this.state.userActivitiesFromDb)\n\n    if (this.state.userActivitiesFromDb.length === 0 || this.state.allActivitiesFromDb.length === 0) {\n      return [];\n    }\n\n    let now = new Date()\n    let currentMonth = now.getMonth()\n    let currentHour = now.getHours()\n\n    let toDoList = [];\n    let timeLeft = time;\n\n    //Step 0a Filter activities for current season\n    let userActivitiesFilteredForSeason = this.state.userActivitiesFromDb.filter(activity => {\n      return activity.seasonStart <= currentMonth && activity.seasonEnd >= currentMonth\n    })\n\n    let allActivitiesFilteredForSeason = this.state.allActivitiesFromDb.filter(activity => {\n      return activity.seasonStart <= currentMonth && activity.seasonEnd >= currentMonth\n    })\n\n    //Step0b Filter activites for time\n    let userActivitiesFilteredForTime = userActivitiesFilteredForSeason.filter(activity => {\n      return activity.timeWindowStart <= currentHour && activity.timeWindowEnd >= currentHour\n    })\n\n    let allActivitiesFilteredForTime = allActivitiesFilteredForSeason.filter(activity => {\n      return activity.timeWindowStart <= currentHour && activity.timeWindowEnd >= currentHour\n    })\n\n    // Update below with filtered activities once database is reseeded\n\n    // Step 1a: Check for activities that meet certain criteria (high priority)\n    let highPriorityToDos = this.checkForHighPriorityToDos(this.state.userActivitiesFromDb)\n\n    // Step 1b: Assess how many can be added to the todolist\n    let highPriorityForToDoList = this.selectActivitiesForToDoList(highPriorityToDos, timeLeft)\n    //console.log(\"High Prio for Todo List: \", highPriorityForToDoList)\n    highPriorityForToDoList.forEach(todo => toDoList.push(todo))\n\n    // Update timeLeft\n    //console.log(\"Duration\", sumActivityDuration(toDoList))\n    timeLeft = time - this.sumActivityDuration(toDoList)\n\n    // Step 2a: Check for activities that meet certain criteria (on user list matching to possible categories)\n    let savedActivities = this.checkForSavedActivities(this.state.userActivitiesFromDb, categories) // returns highprio todos\n    //console.log(\"Saved\", savedActivities)\n\n    // Step 2b: Assess how many can be added to the todolist\n    let savedActivitiesForToDoList = this.selectActivitiesForToDoList(savedActivities, timeLeft)\n    savedActivitiesForToDoList.forEach(todo => toDoList.push(todo))\n\n    // Update timeLeft\n    //console.log(\"Duration\", this.sumActivityDuration(toDoList))\n    timeLeft = time - this.sumActivityDuration(toDoList)\n\n    // Step 3a: Check for activities that meet criteria in all activities\n    let suggestedActivities = this.checkForAllActivities(this.state.allActivitiesFromDb, categories, toDoList)\n    //console.log(\"suggested\", suggestedActivities)\n\n    //Step 3b: Assess how many can be added to the todolist\n    let suggestedActivitiesForToDoList = this.selectSuggestedActivitiesForToDoList(suggestedActivities, timeLeft)\n    suggestedActivitiesForToDoList.forEach(todo => toDoList.push(todo))\n\n    // Update timeLeft\n    //console.log(\"Duration\", this.sumActivityDuration(toDoList))\n    timeLeft = time - this.sumActivityDuration(toDoList)\n\n    //console.log(\"TimeLeft: \", timeLeft)\n    //console.log(\"Todo List in function: \", toDoList)\n\n    return toDoList\n\n  }\n\n  checkForHighPriorityToDos = (userActivities) => {\n    //console.log(\"checking for HighPrioTodos...\")\n    //console.log(\"Activities I received to check for prio:\", userActivities)\n    return userActivities.filter(activity => activity.isHighPriority === true)\n  }\n\n  checkForSavedActivities = (userActivities, categories) => {\n    //console.log(\"Checking for saved activities\");\n    //console.log(\"Activities I received to check for saved:\", userActivities)\n\n    let savedActivities = userActivities.filter(activity => {\n      //console.log(\"Activity in savedActivities\", activity)\n      return categories.some(category => {\n        //console.log(\"Category in savedActivities\", category)\n        return activity.categories.includes(category)\n      })\n    }).filter(activity => activity.isHighPriority !== true)\n    return savedActivities\n  }\n\n  checkForAllActivities = (allActivities, categories, todolist) => {\n    //console.log(\"Checking for all activities\");\n    console.log(\"Todolist: \", todolist)\n    let filteredActivities = allActivities\n      .filter(activity => {\n        console.log(\"running\")\n        return categories.some(category => {\n          return activity.categories.includes(category)\n        })\n      })\n\n    let suggestedActivities = filteredActivities\n      .filter(suggestion => {\n        console.log(\"suggestion 1\", suggestion)\n        return todolist.every(todo => {\n          console.log(\"todo in second filter\", todo)\n          return todo._id !== suggestion._id\n        })\n      })\n    console.log(\"Here are my suggestions: \", suggestedActivities)\n    return suggestedActivities\n  }\n\n  sumActivityDuration = (activities) => {\n    //console.log(\"Sum, activtities passed in: \", activities)\n    if (activities.length > 0) {\n      let sum = 0\n      activities.forEach(activity => {\n        //console.log(\"each activity \", activity)\n        if (activity?.activity?.minDuration) {\n          sum = sum + activity.activity.minDuration\n        } else {\n          sum = sum + activity.minDuration\n        }\n      })\n      return sum\n    }\n    return 0\n  }\n\n  selectSuggestedActivitiesForToDoList = (activities, timeLeft) => {\n    //console.log(\"Activities in Select for toddo list\", activities)\n    //console.log(\"Timeleft in select: \", timeLeft)\n    let activityDuration = this.sumActivityDuration(activities)\n    //console.log(\"Duration in Function\", activityDuration)\n\n    if (activityDuration <= timeLeft) {\n      return activities\n    } else {\n      activities.sort((todo1, todo2) => todo1.minDuration - todo2.minDuration)\n      while (this.sumActivityDuration(activities) > timeLeft) {\n        activities.pop() // Remove the most time-consuming activity\n      }\n      return activities\n    }\n  }\n\n  selectActivitiesForToDoList = (activities, timeLeft) => {\n    //console.log(\"Activities in Select for toddo list\", activities)\n    //console.log(\"Timeleft in select: \", timeLeft)\n    let activityDuration = this.sumActivityDuration(activities)\n    //console.log(\"Duration in Function\", activityDuration)\n\n    if (activityDuration <= timeLeft) {\n      return activities\n    } else {\n      activities.sort((todo1, todo2) => todo1.minDuration - todo2.minDuration)\n      while (this.sumActivityDuration(activities) > timeLeft) {\n        activities.pop() // Remove the most time-consuming activity\n      }\n      return activities\n    }\n  }\n\n  render() {\n\n    let generatedToDoList = this.generateToDoList(this.props.timeForTodoList, this.props.categoriesForTodoList)\n    console.log(\"Here is the generated TodoList: \", generatedToDoList)\n\n    return (\n      <div className=\"hero-body\">\n          <div className=\"container\">\n          <div className=\"columns is-vcentered is-centered center\">\n          <div className=\"box\">\n            <article className=\"media pr-2\">\n              {/* <div class=\"media-right\">\n                <figure class=\"image is-64x64\">\n                  <img src=\"/images/Todo.png\" alt=\"Image\" />\n                </figure>\n              </div> */}\n              <div className=\"media-content\">\n                <div className=\"content\">\n                  <p>\n                    <h3><strong>Here is your To Do List:</strong></h3>\n                    <br></br>\n                    <strong>Available time:</strong> {this.props.timeForTodoList} min <br></br>\n                    <strong>Selected Categories: </strong>\n\n                    {this.props.categoriesForTodoList.map(category => <> {category} </>)}\n\n                  </p>\n                  {generatedToDoList ?\n                    <div id=\"todolist\">\n                      {generatedToDoList.map(todo => <ToDoListItem todo={todo} />)}\n                    </div> : null}\n     \n                </div>\n              </div>\n              <div className=\"media-right\">\n                <figure className=\"image is-64x64 ml-4 mr-2\">\n                  <img src=\"/images/Todo.png\" alt=\"Image\" />\n                </figure>\n              </div>\n            </article>\n          </div>\n        </div>\n        </div>\n      </div>\n\n    )\n  }\n}\n\n  export default withRouter(CreateToDoList);","/Users/anitamikas/Desktop/final-project/activity_generator/client/src/components/createactivities/CategoriesCheckboxes.js",["165","166"],"import React from 'react';\n\nconst CategoriesCheckboxes = (props) => {\n\n  // props.value = ['Sports']\n  let availableCategories = ['Indoors', 'Outdoors', 'Sports', 'Adventures', 'Housework', 'Socializing', 'Relaxing', 'Online']\n\n  // let isChecked = (name) => {\n  //   return props.value.includes(name)\n  // }\n\n \n\n\n\n  return (\n    <div className=\"columns is-multiline is-mobile\">\n      {/* <label>Choose categories:</label> */}\n      {availableCategories.map(c => {\n        return (\n          <div className=\"column is-one-third-mobile is-one-quarter-tablet is-one-quarter-desktop is-one-quarter-widescreen is-one-quarter-fullhd has-text-centered\">\n          <button id=\"categories\" className=\"has-text-centered button-checkboxes\" type=\"checkbox\">\n          <figure className=\"image column is-vcentered is-centered\">\n              <img id=\"categories\" className=\"image\" name={c} style={{ maxWidth: \"180px\" }} src={\"images/\" + c + \".png\"} onClick={props.onChange}/>\n            </figure>\n            </button><br />{c}\n          </div>\n        )\n      })}\n    </div>\n  )\n}\n\nexport default CategoriesCheckboxes;\n\n{/* <figure className=\"image column is-vcentered is-centered\">\n              <img className=\"image column is-vcentered is-centered\" style={{ maxWidth: \"180px\" }} src={\"images/\" + c + \".png\"} />\n            </figure> */}","/Users/anitamikas/Desktop/final-project/activity_generator/client/src/components/todolist/RandomActivity.js",["167"],"import React, { Component } from 'react';\nimport axios from 'axios';\n\nclass RandomActivity extends Component {\n  state = {\n    activitiesFromDb: [],\n    loading : true\n  }\n\n  componentDidMount() {\n    axios.get(\"/api/activities\")\n      .then(response => {\n        this.setState({ activitiesFromDb: response.data, loading: false })\n        console.log(\"Response from backend for random activity: \", response.data)\n      })\n  }\n  // Getting the random number\n  getRandomIntInclusive = (min, max) => {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  }\n  // Getting random activity from both - Users and allFromDb\n  generateRandomActivity = () => {\n    let allActivities = [...this.state.activitiesFromDb]\n    let generatedActivityNumber = this.getRandomIntInclusive(0, allActivities.length)\n    return (allActivities[generatedActivityNumber])\n\n  }\n  render() {\n\n    if (this.state.loading) {\n      return <div>Loading ... </div>\n    }\n\n    let randomActivity = this.generateRandomActivity()\n    return (\n      <div className=\"hero-body\">\n<div className=\"container\">\n<div className=\"columns is-vcentered is-centered center\">\n<div className=\"box\">\n  <article className=\"media pb-2\">\n    <div class=\"media-right\">\n      <figure class=\"image is-128x128 mr-4\">\n        <img src=\"/images/Randomtodo.png\" alt=\"Image\" />\n      </figure>\n    </div>\n    <div className=\"media-content\">\n      <div className=\"content\">\n        <p>\n          <h3>Your Random Activity is... <br></br></h3><h3><strong>{randomActivity.name}!</strong></h3>\n          <br></br>\n          <strong>Duration:</strong> {randomActivity.minDuration} min <br></br>\n          <strong>Description:</strong> {randomActivity.description}<br></br>\n          {/* <strong>Categories: </strong>\n\n          {randomActivity.categories.map(category => <> {category} </>)} */}\n\n        </p>\n       \n\n      </div>\n    </div>   \n  </article>\n</div>\n</div>\n</div>\n</div>\n    )\n  }\n}\n\nexport default RandomActivity;\n\n\n\n","/Users/anitamikas/Desktop/final-project/activity_generator/client/src/components/todolist/ToDoListItem.js",["168","169"],"import React, { Component } from 'react';\n\nclass ToDoListItem extends Component {\n\n  state = {\n    isChecked: false\n  }\n\n  renderTodoList = (todos) => {\n    console.log(\"calling render todo list\")\n    return todos.map(todo => {\n      if (todo.isHighPriority !== undefined) {\n        return <li>{todo.activity.name}</li>\n      } else {\n        return <li>{todo.name}</li>\n      }\n    })\n  }\n\n  checkBoxHandler = (event) => {\n    console.log(\"Event: \", event)\n    if (this.state.isChecked === false) {\n      this.setState({\n        isChecked: true\n      })\n    } else {\n      this.setState({\n        isChecked: false\n      })\n    }\n    this.props.onCheck(event.target.id, event.target.checked)\n  }\n\n  render() {\n\n    let todo = this.props.todo\n    let todoName = \"\"\n    let todoTime = 0\n    let todoId = \"\"\n    let todoDescription = \"\"\n    let todoUrl = \"\"\n    //console.log(todo)\n\n    if (\"activity\" in todo) {\n      todoName = todo.activity.name\n      todoTime = todo.activity.minDuration\n      todoId = todo.activity._id\n    } else {\n      todoName = todo.name\n      todoTime = todo.minDuration\n      todoId = todo._id\n      todoDescription = todo.activity.description\n      todoUrl = todo.activity.url\n    }\n\n    return (\n      \n      <div className=\"mb-4\"><article>\n        <input type=\"checkbox\" checked={this.state.isChecked} id=\"todo-item\" name={todoName} onChange={this.checkBoxHandler} />\n        <strong> {todoName}</strong>\n        <br></br><strong>Description:</strong> {todoDescription}\n        <br></br><strong> Duration: </strong>{todoTime} mins\n        </article>\n      </div>\n    )\n  }\n}\n\nexport default ToDoListItem;","/Users/anitamikas/Desktop/final-project/activity_generator/client/src/components/Activity.js",[],"/Users/anitamikas/Desktop/final-project/activity_generator/client/src/components/FilterByCategory.js",[],"/Users/anitamikas/Desktop/final-project/activity_generator/client/src/components/todolist/ToDoListForm.js",[],{"ruleId":"170","replacedBy":"171"},{"ruleId":"172","replacedBy":"173"},{"ruleId":"174","severity":1,"message":"175","line":70,"column":23,"nodeType":"176","endLine":70,"endColumn":61},{"ruleId":"174","severity":1,"message":"175","line":60,"column":17,"nodeType":"176","endLine":60,"endColumn":84},{"ruleId":"177","severity":1,"message":"178","line":3,"column":22,"nodeType":"179","messageId":"180","endLine":3,"endColumn":30},{"ruleId":"181","severity":1,"message":"182","line":16,"column":27,"nodeType":"183","messageId":"184","endLine":16,"endColumn":29},{"ruleId":"181","severity":1,"message":"182","line":41,"column":27,"nodeType":"183","messageId":"184","endLine":41,"endColumn":29},{"ruleId":"185","severity":1,"message":"186","line":64,"column":11,"nodeType":"176","endLine":64,"endColumn":38},{"ruleId":"174","severity":1,"message":"175","line":66,"column":15,"nodeType":"176","endLine":66,"endColumn":87},{"ruleId":"185","severity":1,"message":"186","line":70,"column":11,"nodeType":"176","endLine":70,"endColumn":154},{"ruleId":"185","severity":1,"message":"186","line":86,"column":13,"nodeType":"176","endLine":86,"endColumn":81},{"ruleId":"185","severity":1,"message":"186","line":91,"column":15,"nodeType":"176","endLine":91,"endColumn":89},{"ruleId":"185","severity":1,"message":"186","line":100,"column":15,"nodeType":"176","endLine":100,"endColumn":42},{"ruleId":"185","severity":1,"message":"186","line":104,"column":17,"nodeType":"176","endLine":104,"endColumn":91},{"ruleId":"185","severity":1,"message":"186","line":107,"column":17,"nodeType":"176","endLine":107,"endColumn":94},{"ruleId":"185","severity":1,"message":"186","line":110,"column":17,"nodeType":"176","endLine":110,"endColumn":93},{"ruleId":"185","severity":1,"message":"186","line":123,"column":41,"nodeType":"176","endLine":123,"endColumn":75},{"ruleId":"185","severity":1,"message":"186","line":131,"column":19,"nodeType":"176","endLine":131,"endColumn":95},{"ruleId":"185","severity":1,"message":"186","line":135,"column":43,"nodeType":"176","endLine":135,"endColumn":102},{"ruleId":"185","severity":1,"message":"186","line":136,"column":33,"nodeType":"176","endLine":136,"endColumn":64},{"ruleId":"177","severity":1,"message":"187","line":2,"column":16,"nodeType":"179","messageId":"180","endLine":2,"endColumn":21},{"ruleId":"177","severity":1,"message":"188","line":3,"column":8,"nodeType":"179","messageId":"180","endLine":3,"endColumn":19},{"ruleId":"177","severity":1,"message":"189","line":4,"column":8,"nodeType":"179","messageId":"180","endLine":4,"endColumn":21},{"ruleId":"177","severity":1,"message":"190","line":5,"column":8,"nodeType":"179","messageId":"180","endLine":5,"endColumn":20},{"ruleId":"177","severity":1,"message":"191","line":6,"column":8,"nodeType":"179","messageId":"180","endLine":6,"endColumn":16},{"ruleId":"174","severity":1,"message":"175","line":19,"column":57,"nodeType":"176","endLine":19,"endColumn":130},{"ruleId":"174","severity":1,"message":"175","line":65,"column":13,"nodeType":"176","endLine":65,"endColumn":139},{"ruleId":"192","severity":1,"message":"193","line":109,"column":1,"nodeType":"194","messageId":"195","endLine":111,"endColumn":19},{"ruleId":"174","severity":1,"message":"175","line":115,"column":17,"nodeType":"176","endLine":115,"endColumn":97},{"ruleId":"174","severity":1,"message":"175","line":17,"column":17,"nodeType":"176","endLine":17,"endColumn":91},{"ruleId":"177","severity":1,"message":"187","line":5,"column":16,"nodeType":"179","messageId":"180","endLine":5,"endColumn":21},{"ruleId":"177","severity":1,"message":"196","line":6,"column":8,"nodeType":"179","messageId":"180","endLine":6,"endColumn":13},{"ruleId":"174","severity":1,"message":"175","line":41,"column":17,"nodeType":"176","endLine":41,"endColumn":87},{"ruleId":"192","severity":1,"message":"193","line":88,"column":1,"nodeType":"194","messageId":"195","endLine":94,"endColumn":20},{"ruleId":"177","severity":1,"message":"197","line":3,"column":8,"nodeType":"179","messageId":"180","endLine":3,"endColumn":22},{"ruleId":"177","severity":1,"message":"187","line":5,"column":19,"nodeType":"179","messageId":"180","endLine":5,"endColumn":24},{"ruleId":"174","severity":1,"message":"175","line":63,"column":17,"nodeType":"176","endLine":63,"endColumn":90},{"ruleId":"192","severity":1,"message":"193","line":105,"column":1,"nodeType":"194","messageId":"195","endLine":111,"endColumn":12},{"ruleId":"177","severity":1,"message":"198","line":63,"column":28,"nodeType":"179","messageId":"180","endLine":63,"endColumn":37},{"ruleId":"177","severity":1,"message":"196","line":2,"column":8,"nodeType":"179","messageId":"180","endLine":2,"endColumn":13},{"ruleId":"177","severity":1,"message":"199","line":3,"column":8,"nodeType":"179","messageId":"180","endLine":3,"endColumn":14},{"ruleId":"192","severity":1,"message":"193","line":33,"column":1,"nodeType":"194","messageId":"195","endLine":38,"endColumn":11},{"ruleId":"177","severity":1,"message":"200","line":3,"column":8,"nodeType":"179","messageId":"180","endLine":3,"endColumn":21},{"ruleId":"177","severity":1,"message":"201","line":72,"column":9,"nodeType":"179","messageId":"180","endLine":72,"endColumn":38},{"ruleId":"177","severity":1,"message":"202","line":76,"column":9,"nodeType":"179","messageId":"180","endLine":76,"endColumn":37},{"ruleId":"203","severity":1,"message":"204","line":255,"column":19,"nodeType":"176","endLine":255,"endColumn":61},{"ruleId":"174","severity":1,"message":"175","line":24,"column":15,"nodeType":"176","endLine":24,"endColumn":148},{"ruleId":"192","severity":1,"message":"193","line":36,"column":1,"nodeType":"194","messageId":"195","endLine":38,"endColumn":26},{"ruleId":"203","severity":1,"message":"204","line":45,"column":9,"nodeType":"176","endLine":45,"endColumn":57},{"ruleId":"177","severity":1,"message":"205","line":51,"column":7,"nodeType":"179","messageId":"180","endLine":51,"endColumn":13},{"ruleId":"177","severity":1,"message":"206","line":53,"column":7,"nodeType":"179","messageId":"180","endLine":53,"endColumn":14},"no-native-reassign",["207"],"no-negated-in-lhs",["208"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Route' is defined but never used.","'AddActivity' is defined but never used.","'AllActivities' is defined but never used.","'MyActivities' is defined but never used.","'MakeMeDo' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'Login' is defined but never used.","'CreateToDoList' is defined but never used.","'className' is assigned a value but never used.","'Signup' is defined but never used.","'ToDoListInput' is defined but never used.","'userActivitiesFilteredForTime' is assigned a value but never used.","'allActivitiesFilteredForTime' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'todoId' is assigned a value but never used.","'todoUrl' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]