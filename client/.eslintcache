[{"/Users/mcscherzberg/Desktop/Ironhack/projects/activitygenerator/client/src/index.js":"1","/Users/mcscherzberg/Desktop/Ironhack/projects/activitygenerator/client/src/reportWebVitals.js":"2","/Users/mcscherzberg/Desktop/Ironhack/projects/activitygenerator/client/src/App.js":"3","/Users/mcscherzberg/Desktop/Ironhack/projects/activitygenerator/client/src/components/Home.js":"4","/Users/mcscherzberg/Desktop/Ironhack/projects/activitygenerator/client/src/components/todolist/MakeMeDo.js":"5","/Users/mcscherzberg/Desktop/Ironhack/projects/activitygenerator/client/src/components/AllActivities.js":"6","/Users/mcscherzberg/Desktop/Ironhack/projects/activitygenerator/client/src/components/Weather.js":"7","/Users/mcscherzberg/Desktop/Ironhack/projects/activitygenerator/client/src/components/todolist/CreateTodoList.js":"8","/Users/mcscherzberg/Desktop/Ironhack/projects/activitygenerator/client/src/components/auth/Signup.js":"9","/Users/mcscherzberg/Desktop/Ironhack/projects/activitygenerator/client/src/components/MyActivities.js":"10","/Users/mcscherzberg/Desktop/Ironhack/projects/activitygenerator/client/src/components/Navbar.js":"11","/Users/mcscherzberg/Desktop/Ironhack/projects/activitygenerator/client/src/components/Footer.js":"12","/Users/mcscherzberg/Desktop/Ironhack/projects/activitygenerator/client/src/components/StartGame.js":"13","/Users/mcscherzberg/Desktop/Ironhack/projects/activitygenerator/client/src/components/UserProfile.js":"14","/Users/mcscherzberg/Desktop/Ironhack/projects/activitygenerator/client/src/components/createactivities/NewActivityForm.js":"15","/Users/mcscherzberg/Desktop/Ironhack/projects/activitygenerator/client/src/components/auth/Login.js":"16","/Users/mcscherzberg/Desktop/Ironhack/projects/activitygenerator/client/src/components/Activity.js":"17","/Users/mcscherzberg/Desktop/Ironhack/projects/activitygenerator/client/src/components/FilterByCategory.js":"18","/Users/mcscherzberg/Desktop/Ironhack/projects/activitygenerator/client/src/components/todolist/ToDoListItem.js":"19","/Users/mcscherzberg/Desktop/Ironhack/projects/activitygenerator/client/src/components/todolist/ToDoListInput.js":"20","/Users/mcscherzberg/Desktop/Ironhack/projects/activitygenerator/client/src/components/createactivities/SelectMonth.js":"21","/Users/mcscherzberg/Desktop/Ironhack/projects/activitygenerator/client/src/components/createactivities/CategoriesCheckboxes.js":"22","/Users/mcscherzberg/Desktop/Ironhack/projects/activitygenerator/client/src/components/todolist/RandomActivity.js":"23"},{"size":679,"mtime":1611412338035,"results":"24","hashOfConfig":"25"},{"size":362,"mtime":1611394365541,"results":"26","hashOfConfig":"25"},{"size":4853,"mtime":1613212306537,"results":"27","hashOfConfig":"25"},{"size":2196,"mtime":1613071053072,"results":"28","hashOfConfig":"25"},{"size":1229,"mtime":1613212480352,"results":"29","hashOfConfig":"25"},{"size":3401,"mtime":1612895592873,"results":"30","hashOfConfig":"25"},{"size":1192,"mtime":1612290025509,"results":"31","hashOfConfig":"25"},{"size":9457,"mtime":1613073140829,"results":"32","hashOfConfig":"25"},{"size":3309,"mtime":1612465759308,"results":"33","hashOfConfig":"25"},{"size":998,"mtime":1613067025389,"results":"34","hashOfConfig":"25"},{"size":3245,"mtime":1613067025389,"results":"35","hashOfConfig":"25"},{"size":694,"mtime":1613067025388,"results":"36","hashOfConfig":"25"},{"size":3728,"mtime":1613067025390,"results":"37","hashOfConfig":"25"},{"size":2892,"mtime":1613067025390,"results":"38","hashOfConfig":"25"},{"size":8022,"mtime":1613067025393,"results":"39","hashOfConfig":"25"},{"size":3584,"mtime":1613067025391,"results":"40","hashOfConfig":"25"},{"size":2445,"mtime":1613067025388,"results":"41","hashOfConfig":"25"},{"size":998,"mtime":1612694795454,"results":"42","hashOfConfig":"25"},{"size":1156,"mtime":1613066046684,"results":"43","hashOfConfig":"25"},{"size":3531,"mtime":1613067025394,"results":"44","hashOfConfig":"25"},{"size":1239,"mtime":1612296229383,"results":"45","hashOfConfig":"25"},{"size":1299,"mtime":1613067025392,"results":"46","hashOfConfig":"25"},{"size":1153,"mtime":1613067025393,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1l01a6p",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"50"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"50"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"50"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"50"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"50"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"/Users/mcscherzberg/Desktop/Ironhack/projects/activitygenerator/client/src/index.js",[],["105","106"],"/Users/mcscherzberg/Desktop/Ironhack/projects/activitygenerator/client/src/reportWebVitals.js",[],"/Users/mcscherzberg/Desktop/Ironhack/projects/activitygenerator/client/src/App.js",["107","108","109"],"/Users/mcscherzberg/Desktop/Ironhack/projects/activitygenerator/client/src/components/Home.js",["110","111","112","113","114","115"],"import React, { Component } from 'react';\nimport { Link, Route } from 'react-router-dom';\nimport AddActivity from './createactivities/NewActivityForm';\nimport AllActivities from './AllActivities';\nimport MyActivities from './MyActivities';\nimport MakeMeDo from './todolist/MakeMeDo';\n\nclass Home extends Component {\n\n    render() {\n\n        return (\n            <section className=\"hero is-fullheight\">\n                <div className=\"hero-body\">\n                    <div className=\"container\">\n                        <div className=\"columns is-vcentered is-centered\">\n                            <figure className=\"image is-centered mb-6\">\n                                {/* <img style={{ maxWidth: \"512px\" }} src=\"images/CloudFinalDarkText.png\" /> */}\n                                <Link to=\"/make-me-do\"> <img style={{ maxWidth: \"512px\" }} src=\"images/CloudFinalDarkText.png\" /></Link>\n                            </figure>\n                        </div>\n                        <div className=\"is-vcentered is-centered\">\n                            <div className=\"columns is-vcentered is-centered has-text-centered\">\n\n                                <Link to=\"/make-me-do\" className=\"button is-light mt-2\">Make me DO something</Link><br></br>\n                            </div>\n                            <div className=\"columns is-vcentered is-centered has-text-centered\">\n                                <Link to=\"/activities\" className=\"button is-light mt-2\">Browse activities</Link><br></br>\n                            </div>\n                            <div className=\"columns is-vcentered is-centered has-text-centered\">\n                                <Link to=\"/add-activity\" className=\"button is-light mt-2\">Create an Activity</Link><br></br>\n                            </div>\n                            <div className=\"columns is-vcentered is-centered has-text-centered\">\n                                <Link to=\"/my-activities\" className=\"button is-light mt-2\">My activities</Link><br></br>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n\n            </section>\n        );\n    }\n}\nexport default Home;","/Users/mcscherzberg/Desktop/Ironhack/projects/activitygenerator/client/src/components/todolist/MakeMeDo.js",[],"/Users/mcscherzberg/Desktop/Ironhack/projects/activitygenerator/client/src/components/AllActivities.js",["116"],"import React, { Component } from 'react';\nimport axios from 'axios';\nimport Activity from './Activity.js'\nimport { Link, withRouter } from 'react-router-dom';\nimport FilterByCategory from './FilterByCategory'\nclass AllActivities extends Component {\n\n  state = {\n    activitiesFromDb: [],\n    search: '',\n    filterBy: ''\n  }\n\n  componentDidMount() {\n    axios.get(\"/api/activities\")\n      .then(response => {\n        this.setState({ activitiesFromDb: response.data })\n        console.log(\"Response from backend: \", response.data)\n      })\n  }\n\n  handleChange = (event) => {\n    let target = event.target;\n    let value = target.value;\n    this.setState({\n      search: value\n    });\n    console.log('state here', this.state);\n  };\n\n  handleFilterChange = (event) => {\n    this.setState({\n      filterBy: event.target.value\n    })\n  }\n\n\n  render() {\n    let filteredByActivities = [...this.state.activitiesFromDb]\n    if (this.state.filterBy.length !== 0) {\n      filteredByActivities = [...this.state.activitiesFromDb]\n            .filter(activity => activity.categories.includes(this.state.filterBy))\n    }\n\n    let filteredBySearchAndCatsActivities = [...filteredByActivities]\n      .filter(activity => {\n        return activity.name.toLowerCase().includes(this.state.search.toLowerCase());\n      });\n    \n    console.log(filteredBySearchAndCatsActivities)\n\n\n    return (\n      <section className=\"hero\">\n        <div className=\"hero-body\">\n          <div className=\"container\">\n            <div className=\"columns is-vcentered is-centered has-text-centered\">\n              <form style={{ maxWidth: \"512px\" }}>\n                <div className=\"field\">\n                  <div className=\"columns is-vcentered is-centered\">\n                    <figure className=\"image\">\n                      <img style={{ maxWidth: \"412px\" }} src=\"images/AllActivities.png\" />\n                    </figure>\n                  </div>\n                  <div className=\"control\">\n                    <Link to=\"/my-activities\"> <button className=\"button is-primary mb-3\">My Activities</button></Link>\n                    <Link to=\"/add-activity\"> <button className=\"button is-primary mb-3\">Create Activity</button></Link>\n                  </div>\n                  <div className=\"control\">\n                    <p className=\"control has-icons-left\">\n                      <input className=\"input\" type=\"text\" placeholder=\"Find Activity...\" name=\"search\" value={this.state.search} onChange={this.handleChange} />\n                      <span className=\"icon is-small is-left\">\n                        <i className=\"fas fa-search\"></i>\n                      </span>\n                    </p>\n                  </div>\n                  <FilterByCategory\n                    handleFilterChange={this.handleFilterChange}\n                  />\n                </div>\n              </form>\n            </div>\n            <div>\n\n              {filteredBySearchAndCatsActivities\n                .map(activity => <Activity\n                  key={activity._id}\n                  activity={activity}\n                  currentFavorites={this.props.currentFavorites}\n                  addToFavorite={this.props.addToFavorite}\n                  removeFromFavorite={this.props.removeFromFavorite}\n                />)}\n            </div>\n          </div>\n        </div>\n      </section>\n    )\n  }\n}\n\n\n\nexport default withRouter(AllActivities);","/Users/mcscherzberg/Desktop/Ironhack/projects/activitygenerator/client/src/components/Weather.js",[],"/Users/mcscherzberg/Desktop/Ironhack/projects/activitygenerator/client/src/components/todolist/CreateTodoList.js",["117","118","119"],"import React, { Component } from 'react';\nimport axios from 'axios';\nimport ToDoListInput from './ToDoListInput';\nimport ToDoListItem from './ToDoListItem';\n\nclass CreateToDoList extends Component {\n  // CreateToDoList receives the available time, possibleCategories and user as props\n  // Calls for useractivities & allactivites from backend and sets as state\n\n  state = {\n    userActivitiesFromDb: [],\n    allActivitiesFromDb: []\n  }\n\n  populateAcitivities = () => {\n    //console.log(\"populate activities runs\")\n    let promises = []\n    let activitiesToPopulate = this.props.user.bookmarkedActivities\n\n    //console.log(\"activities to populate: \", activitiesToPopulate)\n\n    for (let i = 0; i < activitiesToPopulate.length; i++) {\n      promises.push(axios.get(`/api/activities/${activitiesToPopulate[i].activityID}`)\n        .then(response => {\n          return { activity: response.data, isHighPriority: activitiesToPopulate[i].isHighPriority }\n        })\n      )\n    }\n\n    //console.log(\"Promises: \", promises)\n\n    Promise.all(promises)\n      .then((response) => {\n        //console.log(\"All promises resolved\")\n        //console.log(\"CHECK THIS OUTTTTTTT: \" + response)\n        this.setState({\n          userActivitiesFromDb: response\n        })\n      })\n  }\n\n\n  // Call to backend to get allactivities\n\n  componentDidMount = () => {\n    //console.log(\"calling populate activities\")\n    //this.populateAcitivities()\n    axios.get('/api/activities')\n      .then(response => {\n        //console.log(\"Repsonse from backend: \", response.data)\n        this.setState({\n          allActivitiesFromDb: response.data,\n          userActivitiesFromDb: this.props.user.bookmarkedActivities\n        })\n      })\n  }\n\n  // Functions that generate todo list as Class Methods for CreateToDoList\n\n  generateToDoList = (time, categories) => {\n\n    if (this.state.userActivitiesFromDb === 0 || this.state.allActivitiesFromDb.length === 0) {\n      return [];\n    }\n\n    let now = new Date()\n    let currentMonth = now.getMonth()\n    let currentHour = now.getHours()\n\n    let toDoList = [];\n    let timeLeft = time;\n\n    //Step 0a Filter activities for current season\n    let userActivitiesFilteredForSeason = this.state.userActivitiesFromDb.filter(activity => {\n      return activity.seasonStart <= currentMonth && activity.seasonEnd >= currentMonth\n    })\n\n    let allActivitiesFilteredForSeason = this.state.allActivitiesFromDb.filter(activity => {\n      return activity.seasonStart <= currentMonth && activity.seasonEnd >= currentMonth\n    })\n\n    //Step0b Filter activites for time\n    let userActivitiesFilteredForTime = userActivitiesFilteredForSeason.filter(activity => {\n      return activity.timeWindowStart <= currentHour && activity.timeWindowEnd >= currentHour\n    })\n\n    let allActivitiesFilteredForTime = allActivitiesFilteredForSeason.filter(activity => {\n      return activity.timeWindowStart <= currentHour && activity.timeWindowEnd >= currentHour\n    })\n\n    // Update below with filtered activities once database is reseeded\n\n    // Step 1a: Check for activities that meet certain criteria (high priority)\n    let highPriorityToDos = this.checkForHighPriorityToDos(this.state.userActivitiesFromDb)\n\n    // Step 1b: Assess how many can be added to the todolist\n    let highPriorityForToDoList = this.selectActivitiesForToDoList(highPriorityToDos, timeLeft)\n    //console.log(\"High Prio for Todo List: \", highPriorityForToDoList)\n    highPriorityForToDoList.forEach(todo => toDoList.push(todo))\n\n    // Update timeLeft\n    //console.log(\"Duration\", sumActivityDuration(toDoList))\n    timeLeft = time - this.sumActivityDuration(toDoList)\n\n    // Step 2a: Check for activities that meet certain criteria (on user list matching to possible categories)\n    let savedActivities = this.checkForSavedActivities(this.state.userActivitiesFromDb, categories) // returns highprio todos\n    //console.log(\"Saved\", savedActivities)\n\n    // Step 2b: Assess how many can be added to the todolist\n    let savedActivitiesForToDoList = this.selectActivitiesForToDoList(savedActivities, timeLeft)\n    savedActivitiesForToDoList.forEach(todo => toDoList.push(todo))\n\n    // Update timeLeft\n    //console.log(\"Duration\", this.sumActivityDuration(toDoList))\n    timeLeft = time - this.sumActivityDuration(toDoList)\n\n    // Step 3a: Check for activities that meet criteria in all activities\n    let suggestedActivities = this.checkForAllActivities(this.state.allActivitiesFromDb, categories, toDoList)\n    //console.log(\"suggested\", suggestedActivities)\n\n    //Step 3b: Assess how many can be added to the todolist\n    let suggestedActivitiesForToDoList = this.selectSuggestedActivitiesForToDoList(suggestedActivities, timeLeft)\n    suggestedActivitiesForToDoList.forEach(todo => toDoList.push(todo))\n\n    // Update timeLeft\n    //console.log(\"Duration\", this.sumActivityDuration(toDoList))\n    timeLeft = time - this.sumActivityDuration(toDoList)\n\n    //console.log(\"TimeLeft: \", timeLeft)\n    //console.log(\"Todo List in function: \", toDoList)\n\n    return toDoList\n\n  }\n\n  checkForHighPriorityToDos = (userActivities) => {\n    //console.log(\"checking for HighPrioTodos...\")\n    //console.log(\"Activities I received to check for prio:\", userActivities)\n    return userActivities.filter(activity => activity.isHighPriority === true)\n  }\n\n  checkForSavedActivities = (userActivities, categories) => {\n    //console.log(\"Checking for saved activities\");\n    //console.log(\"Activities I received to check for saved:\", userActivities)\n\n    let savedActivities = userActivities.filter(activity => {\n      //console.log(\"Activity in savedActivities\", activity)\n      return categories.some(category => {\n        //console.log(\"Category in savedActivities\", category)\n        return activity.categories.includes(category)\n      })\n    }).filter(activity => activity.isHighPriority !== true)\n    return savedActivities\n  }\n\n  checkForAllActivities = (allActivities, categories, todolist) => {\n    //console.log(\"Checking for all activities\");\n    console.log(\"Todolist: \", todolist)\n    let filteredActivities = allActivities\n      .filter(activity => {\n        console.log(\"running\")\n        return categories.some(category => {\n          return activity.categories.includes(category)\n        })\n      })\n\n    let suggestedActivities = filteredActivities\n      .filter(suggestion => {\n        console.log(\"suggestion 1\", suggestion)\n        return todolist.every(todo => {\n          console.log(\"todo in second filter\", todo)\n          return todo._id !== suggestion._id\n        })\n      })\n    console.log(\"Here are my suggestions: \", suggestedActivities)\n    return suggestedActivities\n  }\n\n  sumActivityDuration = (activities) => {\n    //console.log(\"Sum, activtities passed in: \", activities)\n    if (activities.length > 0) {\n      let sum = 0\n      activities.forEach(activity => {\n        //console.log(\"each activity \", activity)\n        if (activity?.activity?.minDuration) {\n          sum = sum + activity.activity.minDuration\n        } else {\n          sum = sum + activity.minDuration\n        }\n      })\n      return sum\n    }\n    return 0\n  }\n\n  selectSuggestedActivitiesForToDoList = (activities, timeLeft) => {\n    //console.log(\"Activities in Select for toddo list\", activities)\n    //console.log(\"Timeleft in select: \", timeLeft)\n    let activityDuration = this.sumActivityDuration(activities)\n    //console.log(\"Duration in Function\", activityDuration)\n\n    if (activityDuration <= timeLeft) {\n      return activities\n    } else {\n      activities.sort((todo1, todo2) => todo1.minDuration - todo2.minDuration)\n      while (this.sumActivityDuration(activities) > timeLeft) {\n        activities.pop() // Remove the most time-consuming activity\n      }\n      return activities\n    }\n  }\n\n  selectActivitiesForToDoList = (activities, timeLeft) => {\n    //console.log(\"Activities in Select for toddo list\", activities)\n    //console.log(\"Timeleft in select: \", timeLeft)\n    let activityDuration = this.sumActivityDuration(activities)\n    //console.log(\"Duration in Function\", activityDuration)\n\n    if (activityDuration <= timeLeft) {\n      return activities\n    } else {\n      activities.sort((todo1, todo2) => todo1.minDuration - todo2.minDuration)\n      while (this.sumActivityDuration(activities) > timeLeft) {\n        activities.pop() // Remove the most time-consuming activity\n      }\n      return activities\n    }\n  }\n\n  render() {\n\n    let generatedToDoList = this.generateToDoList(this.props.availableTime, this.props.possibleCategories)\n    console.log(\"Here is the generated TodoList: \", generatedToDoList)\n\n    let userActivities = this.state.userActivitiesFromDb.map(activity => activity.seasonStart)\n\n    console.log(userActivities)\n\n    return (\n      <div>\n        <div>\n          Available time: {this.props.availableTime} min\n        Selected Categories:\n          <ul>\n            {this.props.possibleCategories.map(category => <li>{category}</li>)}\n          </ul>\n        </div>\n        <div>\n          {\n            (this.props.availableTime === 0)\n              ? <div>This is not enough time to get something done...</div>\n              : <div> Here is your To Do List! </div>\n          }\n        </div>\n        <div>\n          {generatedToDoList ?\n            <div id=\"todolist\"> {generatedToDoList.map(todo => <ToDoListItem todo={todo} />)} </div>\n            : null}\n        </div>\n      </div>\n    )\n  }\n}\n\n  export default CreateToDoList;","/Users/mcscherzberg/Desktop/Ironhack/projects/activitygenerator/client/src/components/auth/Signup.js",["120","121","122","123"],"import React, { Component } from 'react';\nimport axios from 'axios';\n// import 'bulma/css/bulma.css'\n// import 'react-bulma-components/dist/react-bulma-components.min.css';\nimport { Link, Route, withRouter } from 'react-router-dom';\nimport Login from './Login';\n\n\n\nclass Signup extends Component {\n\n  state = { username: \"\", password: \"\" };\n\n  handleFormSubmit = (event) => {\n    event.preventDefault();\n\n    const username = this.state.username;\n    const password = this.state.password;\n\n    axios.post(\"/api/signup\", { username, password })\n      .then(() => {\n        this.setState({ username: \"\", password: \"\" });\n        this.props.history.push('/login');\n      })\n     \n  }\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  }\n\n  render() {\n    return (\n      <section className=\"hero is-fullheight\">\n        <div className=\"hero-body\">\n          <div className=\"container\">\n            <div className=\"columns is-vcentered is-centered\">\n\n              <figure className=\"image\">\n                <img style={{ maxWidth: \"512px\" }} src=\"images/FinalLightPeach.png\" />\n              </figure>\n            </div>\n            <div className=\"columns is-vcentered is-centered\">\n              <form style={{ maxWidth: \"512px\" }} onSubmit={this.handleFormSubmit}>\n              <h2 className=\"title is-4 mt-1\">Sign up</h2>\n                <div className=\"field\">\n                  <label className=\"label\">Username</label>\n                  <div className=\"control\">\n                    <input className=\"input\" type=\"text\" placeholder=\"e.g Anna Smith\" name=\"username\" value={this.state.username} onChange={e => this.handleChange(e)} />\n                  </div>\n                </div>\n\n                <div className=\"field\">\n                  <label className=\"label\">Password</label>\n                  <div className=\"control\">\n                    <p className=\"control has-icons-left\">\n                      <input className=\"input\" type=\"password\" placeholder=\"Password\" name=\"password\" value={this.state.password} onChange={e => this.handleChange(e)} />\n                      <span className=\"icon is-small is-left\">\n                        <i className=\"fas fa-lock\"></i>\n                      </span>\n                    </p>\n                  </div>\n                </div>\n                <div className=\"control\">\n                  <button type=\"submit\" className=\"button is-primary mb-3\" value=\"Submit\">Submit</button>\n                </div>\n                <div>Already have an account?\n                  <Link to=\"/login\" updateCurrentUser={this.updateCurrentUser}> Log in</Link>\n                \n                  {/* <a href='/login'> Log in here</a> */}\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n\n\n      </section>\n    )\n  }\n}\n\nexport default withRouter(Signup);\n\n\n{/* <form onSubmit={this.handleFormSubmit}>\n          <label>Username:</label>\n          <input type=\"text\" name=\"username\" value={this.state.username} onChange={e => this.handleChange(e)} />\n          <label>Password:</label>\n          <input type=\"password\" name=\"password\" value={this.state.password} onChange={e => this.handleChange(e)} />\n          <input type=\"submit\" value=\"Submit\" />\n        </form> */}\n","/Users/mcscherzberg/Desktop/Ironhack/projects/activitygenerator/client/src/components/MyActivities.js",["124","125"],"import React, { Component } from 'react';\nimport axios from 'axios';\n\nclass MyActivities extends Component {\n\n  state = {\n    favoriteActivities: this.props.currentFavorites\n  }\n\n  render() {\n    return (\n      <section className=\"hero\">\n        <div className=\"hero-body\">\n          <div className=\"container\">\n            <div className=\"columns is-vcentered is-centered\">\n              <figure className=\"image\">\n                <img style={{ maxWidth: \"412px\" }} src=\"images/Myactivities.png\" />\n              </figure>\n            </div>\n            <div className=\"columns is-multiline is-mobile\">\n        {this.state.favoriteActivities &&\n          this.state.favoriteActivities.map(activity => <div className=\"column is-full has-text-centered\">{activity.name} || \n            {activity.isHighPriority ? <span> High priority</span> : <span> Low priority</span>} </div>\n          )}\n          </div>\n          </div>\n        </div>\n\n\n      </section>\n    )\n  }\n}\n\nexport default MyActivities;","/Users/mcscherzberg/Desktop/Ironhack/projects/activitygenerator/client/src/components/Navbar.js",["126","127","128","129","130","131","132","133","134","135","136","137","138"],"import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { withRouter } from 'react-router-dom'\n\n\nclass Navbar extends Component {\n\nhandleLogOut = () => {\n  this.props.logoutUser()\n}\n\n  render() {\n\n    console.log(\"History: \", this.props.history.location.pathname)\n    console.log(\"User: \", this.props.currentUser)\n\n\n    return (\n      <nav className=\"navbar\" role=\"navigation\" aria-label=\"main navigation\">\n        <div className=\"navbar-brand\">\n          <a className=\"navbar-item\">  \n          <Link to=\"/home\" className=\"has-text-grey-dark\">\n          <img src=\"images/MakeMeDo_textOnly_black.png\" width=\"112\" height=\"28\" />\n          </Link>\n          </a>\n\n          <a role=\"button\" className=\"navbar-burger\" aria-label=\"menu\" aria-expanded=\"false\" data-target=\"navbarBasicExample\">\n            <span aria-hidden=\"true\"></span>\n            <span aria-hidden=\"true\"></span>\n            <span aria-hidden=\"true\"></span>\n          </a>\n        </div>\n        \n        <div id=\"navbarBasicExample\" className=\"navbar-menu\">\n          <div className=\"navbar-start\">\n            <a className=\"navbar-item\">\n              <Link to=\"/home\" className=\"has-text-grey-dark\">Home</Link>\n            </a>\n\n            <div className=\"navbar-start\">\n            <a className=\"navbar-item\">\n              <Link to=\"/make-me-do\" className=\"has-text-grey-dark\">Do Something</Link>\n            </a>\n            </div>\n\n            <div className=\"navbar-item has-dropdown is-hoverable\">\n              <a className=\"navbar-link\">\n                Activities\n            </a>\n\n              <div className=\"navbar-dropdown\">\n              <a className=\"navbar-item\">\n              <Link to=\"/activities\" className=\"has-text-grey-dark\">Browse Activities</Link>\n            </a>\n            <a className=\"navbar-item\">\n              <Link to=\"/my-activities\" className=\"has-text-grey-dark\">My Activities</Link>\n            </a>\n            <a className=\"navbar-item\">\n              <Link to=\"/add-activity\" className=\"has-text-grey-dark\">Create Activities</Link>\n            </a>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"navbar-end\">\n          <a className=\"navbar-item\">\n          {/* ANITA CHENGE HERE FOR USER PROFILE */}\n              {this.props.currentUser ? <div to=\"/make-me-do\" className=\"has-text-grey-dark\"><Link to=\"/user-profile\" className=\"button-is-light\">Your profile</Link></div> : null}\n            </a>\n            <div className=\"navbar-item\">\n              <div className=\"buttons\">\n              {!this.props.currentUser ? \n                <a className=\"button is-primary\">\n                  <Link to=\"/signup\" className=\"has-text-grey-dark\">Sign up</Link>\n                </a> : null}\n                {/* PROBLEMS HERE PROBLEMS HERE PROBLEMS HERE PROBLEMS HERE */}\n                {this.props.currentUser ? <a className=\"button is-light\" onClick={this.handleLogOut}>\n                  Log out</a> : <a className=\"button is-light\">\n                  <Link to=\"/login\" className=\"button-is-light\">Log in</Link>\n              </a>}\n              </div>\n            </div>\n          </div>\n        </div>\n      </nav>\n\n    )\n  }\n}\n\nexport default withRouter(Navbar);\n","/Users/mcscherzberg/Desktop/Ironhack/projects/activitygenerator/client/src/components/Footer.js",[],"/Users/mcscherzberg/Desktop/Ironhack/projects/activitygenerator/client/src/components/StartGame.js",["139"],"import React, { Component } from 'react';\nimport axios from 'axios';\nimport { withRouter } from 'react-router-dom'\n\nclass StartGame extends Component {\n  constructor(props) {\n    super(props);\n    this.chosenPreferences = [];\n    this.state = {\n      preferences: [\n        { propositionOne: [\"Relax\", \"Relaxing\"], propositionTwo: [\"Sport\", \"Sports\"] }\n      ]\n    };\n  }\n\n\n  updatingUserPreferences = () => {\n\n    const preferences = this.chosenPreferences;\n    axios.put(`/api/user/${this.props.user._id}`, { preferences })\n      .then(() => {\n        this.setState({\n          preferences: this.chosenPreferences\n        });\n        let user = this.props.user\n        user.preferences = this.chosenPreferences\n        this.props.updateUser(user)\n        //this.props.history.push('/home');\n      })\n      .catch(error => console.log(error))\n  }\n\n\n\n  // creatingButtonsFunction needed\n  creatingButtonsFunction = () => {\n    return this.state.preferences.map(pref => {\n      return (\n        <div className=\"buttons is-vcentered is-centered\">\n          <button className=\"button is-light\" key={pref.propositionOne[0]} type=\"submit\" onClick={this.pushToCategories} value={pref.propositionOne[1]}>{pref.propositionOne[0]}</button>\n          <button className=\"button is-light\" key={pref.propositionTwo[0]} type=\"submit\" onClick={this.pushToCategories} value={pref.propositionTwo[1]}>{pref.propositionTwo[0]}</button>\n        </div>\n      )\n    }\n    )\n  }\n\n\n  pushToCategories = (event) => {\n\n    let button = event.currentTarget\n    this.chosenPreferences.push(button.value)\n    console.log(this.chosenPreferences)\n\n    if (this.chosenPreferences.length === 1) {\n      this.setState({\n        preferences: [{ propositionOne: [\"Indoor\", \"Indoors\"], propositionTwo: [\"Outdoor\", \"Outdoors\"] }]\n      })\n    }\n\n    if (this.chosenPreferences.length === 2) {\n      this.setState({\n        preferences: [{ propositionOne: [\"Gym\", \"Sports\"], propositionTwo: [\"Bathtube\", \"Relaxing\"] }]\n      })\n    }\n\n    if (this.chosenPreferences.length === 3) {\n      this.setState({\n        preferences: [{ propositionOne: [\"Leave me alone\", \"Relaxing\"], propositionTwo: [\"Take me out\", \"Socializing\"] }]\n      })\n    }\n\n    if (this.chosenPreferences.length === 4) {\n      this.setState({\n        preferences: [{ propositionOne: [\"Cleaning master\", \"Housework\"], propositionTwo: [\"Dust doesn't hurt\", \"Adventures\"] }]\n      })\n    }\n\n    if (this.chosenPreferences.length === 5) {\n      this.setState({\n        preferences: [{ propositionOne: [\"Online\", \"Online\"], propositionTwo: [\"Offline\", \"Outside\"] }]\n      })\n    }\n\n    if (this.chosenPreferences.length === 6) {\n      this.setState({\n        preferences: [{ propositionOne: [\"Tea\", \"Relaxing\"], propositionTwo: [\"Bungee jumping\", \"Adventures\"] }]\n      })\n    }\n\n    if (this.chosenPreferences.length === 7) {\n      return (this.updatingUserPreferences())\n    }\n\n  };\n\n  render() {\n\n    return (\n      <section className=\"hero is-fullheight\">\n        <div className=\"hero-body\">\n          <div className=\"container\">\n            <div className=\"columns is-vcentered is-centered\">\n              <h1 className=\"subtitle has-text-centered pb-5\">Choose one of the options to create your profile</h1>\n            </div>\n            <div className=\"columns is-vcentered is-centered\">\n              {this.creatingButtonsFunction()}\n            </div>\n            <div className=\"columns is-vcentered is-centered\">\n              <figure className=\"image\">\n                <img style={{ maxWidth: \"512px\" }} src=\"images/thinking_girl_with_plants.png\" />\n              </figure>\n            </div>\n          </div>\n        </div>\n      </section>\n    )\n  }\n}\nexport default withRouter(StartGame);\n","/Users/mcscherzberg/Desktop/Ironhack/projects/activitygenerator/client/src/components/UserProfile.js",[],"/Users/mcscherzberg/Desktop/Ironhack/projects/activitygenerator/client/src/components/createactivities/NewActivityForm.js",[],"/Users/mcscherzberg/Desktop/Ironhack/projects/activitygenerator/client/src/components/auth/Login.js",["140","141"],"import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Link, withRouter } from 'react-router-dom';\n\nclass Login extends Component {\n\n  state = { username: \"\", password: \"\" };\n\n  handleFormSubmit = (event) => {\n    event.preventDefault();\n\n    const username = this.state.username;\n    const password = this.state.password;\n\n    axios.post(\"/api/login\", { username, password })\n      .then((resp) => {\n        this.setState({ username: \"\", password: \"\" });\n        this.props.updateCurrentUser(resp.data)\n        this.props.history.push('/home');\n      })\n  }\n\n  // Geolocation of user - checking if its available\n  // componentDidMount() {\n  //   if (\"geolocation\" in navigator) {\n  //     console.log(\"Available\");\n  //   } else {\n  //     console.log(\"Not Available\");\n  //   }\n  // }\n\n  // getting the location\n\n  // componentDidMount() {\n  //   navigator.geolocation.getCurrentPosition(function(position) {\n  //     console.log(\"Latitude is :\", position.coords.latitude);\n  //     console.log(\"Longitude is :\", position.coords.longitude);\n  //   });\n  // }\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  }\n\n  render() {\n    return (\n      <section className=\"hero is-fullheight\">\n        <div className=\"hero-body\">\n          <div className=\"container\">\n            <div className=\"columns is-vcentered is-centered\">\n            \n              <figure className=\"image\">\n                <img style={{ maxWidth: \"512px\" }} src=\"images/CloudFinalDarkText.png\" />\n              </figure>\n            </div>\n            <div className=\"column is-vcentered is-centered\">\n              <form style={{ maxWidth: \"512px\" }} onSubmit={this.handleFormSubmit}>\n              <h2 className=\"title is-4\">Log in</h2>\n                <div className=\"field\">\n                  <label className=\"label\">Username</label>\n                  <div className=\"control\">\n                    <input className=\"input\" type=\"text\" placeholder=\"e.g Anna Smith\" name=\"username\" value={this.state.username} onChange={e => this.handleChange(e)} />\n                  </div>\n                </div>\n\n                <div className=\"field\">\n                  <label className=\"label\">Password</label>\n                  <div className=\"control\">\n                    <p className=\"control has-icons-left\">\n                      <input className=\"input\" type=\"password\" placeholder=\"Password\" name=\"password\" value={this.state.password} onChange={e => this.handleChange(e)} />\n                      <span className=\"icon is-small is-left\">\n                        <i className=\"fas fa-lock\"></i>\n                      </span>\n                    </p>\n                  </div>\n                </div>\n                <div className=\"control\">\n                  <button type=\"submit\" className=\"button is-primary mb-3\">Submit</button>\n                </div>\n                <div><p>First time here?\n{/* <Route path=\"/login\" component={Login}></Route> */}\n                  <Link to=\"/signup\"> Sign up</Link> </p>\n                </div>\n              </form>\n\n            </div>\n          </div>\n        </div>\n      </section>\n    )\n  }\n}\n\n{/* <form onSubmit={this.handleFormSubmit}>\n<label>Username:</label>\n<input type=\"text\" name=\"username\" value={this.state.username} onChange={e => this.handleChange(e)} />\n<label>Password:</label>\n<input type=\"password\" name=\"password\" value={this.state.password} onChange={e => this.handleChange(e)} />\n<input type=\"submit\" value=\"Submit\" />\n</form> */}\n\n\n\nexport default withRouter(Login);\n","/Users/mcscherzberg/Desktop/Ironhack/projects/activitygenerator/client/src/components/Activity.js",[],"/Users/mcscherzberg/Desktop/Ironhack/projects/activitygenerator/client/src/components/FilterByCategory.js",[],"/Users/mcscherzberg/Desktop/Ironhack/projects/activitygenerator/client/src/components/todolist/ToDoListItem.js",[],"/Users/mcscherzberg/Desktop/Ironhack/projects/activitygenerator/client/src/components/todolist/ToDoListInput.js",[],"/Users/mcscherzberg/Desktop/Ironhack/projects/activitygenerator/client/src/components/createactivities/SelectMonth.js",["142"],"import React from 'react';\n\nconst SelectMonth = (props) => {\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\" for=\"seasons\">{props.label}</label>\n      <div className=\"control\" style={{ maxWidth: \"160px\" }}>\n      <div className=\"select\">\n      <select id={props.agenda} name=\"months\" form=\"addActivityForm\" onChange={props.onSelect} >\n        <option value=\"01\">January</option>\n        <option value=\"02\">February</option>\n        <option value=\"03\">March</option>\n        <option value=\"04\">April</option>\n        <option value=\"05\">May</option>\n        <option value=\"06\">June</option>\n        <option value=\"07\">July</option>\n        <option value=\"08\">August</option>\n        <option value=\"09\">September</option>\n        <option value=\"10\">October</option>\n        <option value=\"11\">November</option>\n        <option value=\"12\">December</option>\n      </select>\n      </div>\n      </div>\n    </div>\n  )\n}\n\nexport default SelectMonth;\n\n\n{/* <div className=\"field\">\n<label className=\"label\">Possible roughly until:</label>\n<div className=\"control\" style={{ maxWidth: \"100px\" }}>\n  <input className=\"input\" type=\"number\" name=\"endTime\" value={this.state.endTime} onChange={this.handleChange} />\n</div>\n</div> */}","/Users/mcscherzberg/Desktop/Ironhack/projects/activitygenerator/client/src/components/createactivities/CategoriesCheckboxes.js",["143","144"],"import React from 'react';\n\nconst CategoriesCheckboxes = (props) => {\n\n  // props.value = ['Sports']\n  let availableCategories = ['Indoors', 'Outdoors', 'Sports', 'Adventures', 'Housework', 'Socializing', 'Relaxing', 'Online']\n\n  // let isChecked = (name) => {\n  //   return props.value.includes(name)\n  // }\n\n  return (\n    <div className=\"columns is-multiline is-mobile\">\n      {/* <label>Choose categories:</label> */}\n      {availableCategories.map(c => {\n        return (\n          <div className=\"column is-one-third-mobile is-one-quarter-tablet is-one-quarter-desktop is-one-quarter-widescreen is-one-quarter-fullhd has-text-centered\">\n          <button id=\"categories\" className=\"has-text-centered is-white\">\n          <figure className=\"image column is-vcentered is-centered\">\n              <img id=\"categories\" className=\"image\" name={c} style={{ maxWidth: \"180px\" }} src={\"images/\" + c + \".png\"} onClick={props.onChange}/>\n            </figure>\n            </button><br />{c}\n          </div>\n        )\n      })}\n    </div>\n  )\n}\n\nexport default CategoriesCheckboxes;\n\n{/* <figure className=\"image column is-vcentered is-centered\">\n              <img className=\"image column is-vcentered is-centered\" style={{ maxWidth: \"180px\" }} src={\"images/\" + c + \".png\"} />\n            </figure> */}","/Users/mcscherzberg/Desktop/Ironhack/projects/activitygenerator/client/src/components/todolist/RandomActivity.js",[],{"ruleId":"145","replacedBy":"146"},{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","severity":1,"message":"150","line":4,"column":10,"nodeType":"151","messageId":"152","endLine":4,"endColumn":14},{"ruleId":"149","severity":1,"message":"153","line":11,"column":8,"nodeType":"151","messageId":"152","endLine":11,"endColumn":22},{"ruleId":"149","severity":1,"message":"154","line":17,"column":8,"nodeType":"151","messageId":"152","endLine":17,"endColumn":15},{"ruleId":"149","severity":1,"message":"155","line":2,"column":16,"nodeType":"151","messageId":"152","endLine":2,"endColumn":21},{"ruleId":"149","severity":1,"message":"156","line":3,"column":8,"nodeType":"151","messageId":"152","endLine":3,"endColumn":19},{"ruleId":"149","severity":1,"message":"157","line":4,"column":8,"nodeType":"151","messageId":"152","endLine":4,"endColumn":21},{"ruleId":"149","severity":1,"message":"158","line":5,"column":8,"nodeType":"151","messageId":"152","endLine":5,"endColumn":20},{"ruleId":"149","severity":1,"message":"159","line":6,"column":8,"nodeType":"151","messageId":"152","endLine":6,"endColumn":16},{"ruleId":"160","severity":1,"message":"161","line":19,"column":57,"nodeType":"162","endLine":19,"endColumn":130},{"ruleId":"160","severity":1,"message":"161","line":62,"column":23,"nodeType":"162","endLine":62,"endColumn":91},{"ruleId":"149","severity":1,"message":"163","line":3,"column":8,"nodeType":"151","messageId":"152","endLine":3,"endColumn":21},{"ruleId":"149","severity":1,"message":"164","line":83,"column":9,"nodeType":"151","messageId":"152","endLine":83,"endColumn":38},{"ruleId":"149","severity":1,"message":"165","line":87,"column":9,"nodeType":"151","messageId":"152","endLine":87,"endColumn":37},{"ruleId":"149","severity":1,"message":"155","line":5,"column":16,"nodeType":"151","messageId":"152","endLine":5,"endColumn":21},{"ruleId":"149","severity":1,"message":"166","line":6,"column":8,"nodeType":"151","messageId":"152","endLine":6,"endColumn":13},{"ruleId":"160","severity":1,"message":"161","line":41,"column":17,"nodeType":"162","endLine":41,"endColumn":87},{"ruleId":"167","severity":1,"message":"168","line":87,"column":1,"nodeType":"169","messageId":"170","endLine":93,"endColumn":20},{"ruleId":"149","severity":1,"message":"171","line":2,"column":8,"nodeType":"151","messageId":"152","endLine":2,"endColumn":13},{"ruleId":"160","severity":1,"message":"161","line":17,"column":17,"nodeType":"162","endLine":17,"endColumn":84},{"ruleId":"172","severity":1,"message":"173","line":21,"column":11,"nodeType":"162","endLine":21,"endColumn":38},{"ruleId":"160","severity":1,"message":"161","line":23,"column":11,"nodeType":"162","endLine":23,"endColumn":83},{"ruleId":"172","severity":1,"message":"173","line":27,"column":11,"nodeType":"162","endLine":27,"endColumn":127},{"ruleId":"172","severity":1,"message":"173","line":36,"column":13,"nodeType":"162","endLine":36,"endColumn":40},{"ruleId":"172","severity":1,"message":"173","line":41,"column":13,"nodeType":"162","endLine":41,"endColumn":40},{"ruleId":"172","severity":1,"message":"173","line":47,"column":15,"nodeType":"162","endLine":47,"endColumn":42},{"ruleId":"172","severity":1,"message":"173","line":52,"column":15,"nodeType":"162","endLine":52,"endColumn":42},{"ruleId":"172","severity":1,"message":"173","line":55,"column":13,"nodeType":"162","endLine":55,"endColumn":40},{"ruleId":"172","severity":1,"message":"173","line":58,"column":13,"nodeType":"162","endLine":58,"endColumn":40},{"ruleId":"172","severity":1,"message":"173","line":66,"column":11,"nodeType":"162","endLine":66,"endColumn":38},{"ruleId":"172","severity":1,"message":"173","line":73,"column":17,"nodeType":"162","endLine":73,"endColumn":50},{"ruleId":"172","severity":1,"message":"173","line":77,"column":43,"nodeType":"162","endLine":77,"endColumn":102},{"ruleId":"172","severity":1,"message":"173","line":78,"column":33,"nodeType":"162","endLine":78,"endColumn":64},{"ruleId":"160","severity":1,"message":"161","line":111,"column":17,"nodeType":"162","endLine":111,"endColumn":97},{"ruleId":"160","severity":1,"message":"161","line":54,"column":17,"nodeType":"162","endLine":54,"endColumn":90},{"ruleId":"167","severity":1,"message":"168","line":95,"column":1,"nodeType":"169","messageId":"170","endLine":101,"endColumn":12},{"ruleId":"167","severity":1,"message":"168","line":33,"column":1,"nodeType":"169","messageId":"170","endLine":38,"endColumn":11},{"ruleId":"160","severity":1,"message":"161","line":20,"column":15,"nodeType":"162","endLine":20,"endColumn":148},{"ruleId":"167","severity":1,"message":"168","line":32,"column":1,"nodeType":"169","messageId":"170","endLine":34,"endColumn":26},"no-native-reassign",["174"],"no-negated-in-lhs",["175"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'CreateToDoList' is defined but never used.","'Weather' is defined but never used.","'Route' is defined but never used.","'AddActivity' is defined but never used.","'AllActivities' is defined but never used.","'MyActivities' is defined but never used.","'MakeMeDo' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'ToDoListInput' is defined but never used.","'userActivitiesFilteredForTime' is assigned a value but never used.","'allActivitiesFilteredForTime' is assigned a value but never used.","'Login' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'axios' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation"]